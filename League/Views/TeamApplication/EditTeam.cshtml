@using League.Components
@using League.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using TournamentManager.MultiTenancy
@inject IViewLocalizer Localizer
@inject ITenantContext TenantContext
@model League.Models.TeamViewModels.TeamEditModel
@{
    ViewData["Title"] = Localizer["Team Registration"].Value + " - " + ViewData["TournamentName"];
    var tenantUrlSegment = TenantContext.SiteContext.UrlSegmentValue;
}
<div class="mb-0 pb-1">
    <h2 class="h2">@ViewData["Title"]</h2>
    <hr class="mb-2" />
    <form asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.EditTeam)" asp-route-tenant="@tenantUrlSegment" method="post" role="form">
        <site-validation-summary show="All" warning="@Model.IsWarning" unique-error-text="true"></site-validation-summary>
        <input asp-for="Hash" type="hidden" />
        <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
        @if (Model.IsWarning)
        {
            <div class="p-1 col-12 col-md-6 border border-warning rounded">
                <div class="form-check">
                    <input asp-for="OverrideWarnings" type="checkbox" class="form-check-input">
                    <label class="form-check-label text-warning mt-0" asp-for="OverrideWarnings"></label>
                </div>
            </div>
        }
        @(await Component.InvokeAsync<RoundSelector>(Model.Round))
        @(await Component.InvokeAsync<TeamEditor>(Model.Team))
        <div class="row">
            <div class="mb-3 col-12 col-md-6 mt-2">
                <a asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.SelectTeam)" asp-route-tenant="@tenantUrlSegment" class="btn btn-secondary">@Localizer["Back"]</a>
                <button type="submit" class="btn btn-primary">@Localizer["Continue"]</button>
            </div>
        </div>
    </form>
</div>
@section styles
{
    <link rel="stylesheet" href="~/lib/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.css" />
    <style type="text/css">
        /* Start: Change checkbox color */
        .border-warning > .form-check > input[type=checkbox]:checked {
            background-color: var(--bs-warning);
        }

        .border-warning > .form-check > input[type=checkbox] {
            border: 2px solid var(--bs-warning);
            background-color: transparent;
        }
        /* End: Change checkbox color */
    </style>

}
@section scripts
{
    @* moment and tempusdominus-bootstrap-4 are required for EditTeam *@
    <script type="text/javascript" src="~/lib/Moment/moment.min.js"></script>
    <script type="text/javascript" src="~/lib/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.js"></script>
    <partial name="@nameof(League.Views.ViewNames.Shared._DateTimePickerScriptPartial)" />
    <script type="text/javascript" site-on-content-loaded="true">
        @* Focus the 'Round.SelectedRoundId' button *@
        @{
            if (Model.Round?.SelectedRoundId != null)
            {
                <text>$('button[data-id=</text>@Html.IdFor(m => m.Round!.SelectedRoundId!)<text>]').focus();</text>
            }
        }
    </script>
}
