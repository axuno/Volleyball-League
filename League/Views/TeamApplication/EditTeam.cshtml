@using League.Components
@using League.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using TournamentManager.MultiTenancy
@inject IViewLocalizer Localizer
@inject ITenantContext TenantContext
@model League.Models.TeamViewModels.TeamEditModel
@{
    ViewData["Title"] = Localizer["Team Registration"].Value + " - " + ViewData["TournamentName"];
    var tenantUrlSegment = TenantContext.SiteContext.UrlSegmentValue;
}
<div class="mb-0 pb-1">
    <h2 class="h2">@ViewData["Title"]</h2>
    <hr class="mb-2" />
    <form asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.EditTeam)" asp-route-organization="@tenantUrlSegment" method="post" role="form">
        <site-validation-summary show="All" warning="@Model.IsWarning" unique-error-text="true"></site-validation-summary>
        <input asp-for="Hash" type="hidden" />
        <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
        @if (Model.IsWarning)
        {
            <div class="row">
                <div class="form-group col-12 col-md-6">
                    <div class="custom-control custom-checkbox border border-warning rounded py-2">
                        <input asp-for="OverrideWarnings" type="checkbox" class="custom-control-input">
                        <label class="custom-control-label text-warning ml-2 mt-0" asp-for="OverrideWarnings"></label>
                    </div>
                </div>
            </div>
        }
        @(await Component.InvokeAsync<RoundSelector>(Model.Round))
        @(await Component.InvokeAsync<TeamEditor>(Model.Team))
        <div class="row">
            <div class="form-group col-12 col-md-6 mt-2">
                <a asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.SelectTeam)" asp-route-organization="@tenantUrlSegment" class="btn btn-secondary">@Localizer["Back"]</a>
                <button type="submit" class="btn btn-primary">@Localizer["Continue"]</button>
            </div>
        </div>
    </form>
</div>
@section styles
{
    <link rel="stylesheet" href="~/lib/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.css" />
    <style type="text/css">
        /* Start: Change Bootstrap 4 default custom checkbox color */
        .custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {
            background-color: var(--warning);
            border-color: var(--warning);
        }

        .custom-control-input:checked ~ .custom-control-label::before {
            color: #fff;
            background-color: var(--warning);
            border-color: var(--warning);
        }
        /* End: Change Bootstrap 4 default custom checkbox color */
    </style>

}
@section scripts
{
    @* moment and tempusdominus-bootstrap-4 are required for EditTeam *@
    <script type="text/javascript" src="~/lib/Moment/moment.min.js"></script>
    <script type="text/javascript" src="~/lib/tempusdominus-bootstrap-4/tempusdominus-bootstrap-4.min.js"></script>
    <partial name="@nameof(League.ViewNames.Shared._DateTimePickerScriptPartial)" />
    <script type="text/javascript" site-on-content-loaded="true">
        @* Focus the 'Round.SelectedRoundId' selectpicker button *@
        $('button[data-id=@Html.IdFor(m => m.Round.SelectedRoundId)]').focus();
    </script>
}
