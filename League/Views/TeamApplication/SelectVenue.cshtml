@using League.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using TournamentManager.MultiTenancy
@using League.Components
@inject IViewLocalizer Localizer
@inject ITenantContext TenantContext
@model League.Models.TeamViewModels.TeamVenueSelectModel
@{ ValueTuple<long, IList<long>, VenueSelectorComponentModel.Criteria, VenueSelectorComponentModel.Criteria, long?> componentModel =
          (Model.TournamentId,
              new List<long>(new[] { Model.TeamId }),
              (!TenantContext.TournamentContext.TeamRuleSet.HomeVenue.MustBeSet ? VenueSelectorComponentModel.Criteria.NotSpecified : 0) |
              VenueSelectorComponentModel.Criteria.VenuesOfTeams | VenueSelectorComponentModel.Criteria.Active | VenueSelectorComponentModel.Criteria.Unused,
              VenueSelectorComponentModel.Criteria.VenuesOfTeams | VenueSelectorComponentModel.Criteria.Active | VenueSelectorComponentModel.Criteria.Unused,
              default);
    ViewData["Title"] = Localizer["Team Registration"].Value + " - " + ViewData["TournamentName"];
    var tenantUrlSegment = TenantContext.SiteContext.UrlSegmentValue;
}
<div class="mb-0 pb-2">
    <h2 class="h2">@ViewData["Title"]</h2>
    <hr class="mb-3" />
    @(await Component.InvokeAsync<VenueSelector>(componentModel))
    <form asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.SelectVenue)" asp-route-tenant="@tenantUrlSegment" method="post" novalidate>
        <input asp-for="TeamId" type="hidden" />
        <input asp-for="VenueId" type="hidden" />
        <div class="row mt-3">
            <div class="mb-3 col-12 col-md-6">
                <input type="submit" class="btn btn-primary" value="@Localizer["Continue with selected venue"]">
            </div>
        </div>
        <div class="row">
            <div class="mb-3 col-12 col-md-6">
                <label class="form-label">@Localizer["No venue from the list applies"]</label>
                <a asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.EditVenue)" asp-route-tenant="@tenantUrlSegment" asp-route-isnew="true" class="btn btn-primary">@Localizer["Create a new venue"]</a>
            </div>
        </div>
        <div class="row">
            <div class="mb-3 col-12 col-md-6">
                <a asp-controller="@nameof(TeamApplication)" asp-action="@nameof(TeamApplication.EditTeam)" asp-route-tenant="@tenantUrlSegment" class="btn btn-secondary">@Localizer["Back"]</a>
            </div>
        </div>
    </form>
</div>
@section styles
{
    <style type="text/css">
    @* TeamVenueSelect *@

        #venue-list tbody tr {
            border-bottom: solid 2px lightgray
        }

        #venue-list thead {
            background-color: lightgray
        }

        #venue-list td {
            cursor: pointer;
        }

        #venue-picker .input-group {
            cursor: pointer;
        }
    </style>
}
@section scripts
{
    <script type="text/javascript" site-on-content-loaded="true">

        function CheckUncheckItems() {
            document.querySelectorAll('#venue-list tr[data-venue-id]').forEach(function(r) {
                if (r.getAttribute('data-venue-id') === document.querySelector('#@(Html.IdFor(m => m.VenueId))').value) {
                    r.querySelector('td:first-child').innerHTML = '<i class="fas fa-check"></i>';
                } else {
                    r.querySelector('td:first-child').innerHTML = '';
                }
            });
        }

        document.querySelectorAll('#venue-list tr[data-venue-id]').forEach(function(r) {
            r.addEventListener('click', function() {
                document.querySelector('#@(Html.IdFor(m => m.VenueId))').value = r.getAttribute('data-venue-id');
                CheckUncheckItems();
            });
        });

        CheckUncheckItems();
    </script>
}