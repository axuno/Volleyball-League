@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using TournamentManager.MultiTenancy
@inject IViewLocalizer Localizer
@inject ITenantContext TenantContext
@model League.Models.MatchViewModels.EnterResultViewModel
@{
    ViewData["Title"] = Localizer["Enter Match Result"].Value + " - " + Model.Tournament?.Name;
    var tenantUrlSegment = TenantContext.SiteContext.UrlSegmentValue;

    string AddBallPointsErr(int setIndex)
    {
        return !ViewData.ModelState.IsValid && ViewData.ModelState.GetValidationState($"{nameof(Model.BallPoints)}-{setIndex}") == ModelValidationState.Invalid ? " input-validation-error" : string.Empty;
    }

    string AddSetPointsErr(int setIndex)
    {
        return !ViewData.ModelState.IsValid && ViewData.ModelState.GetValidationState($"{nameof(Model.SetPoints)}-{setIndex}") == ModelValidationState.Invalid ? " input-validation-error" : string.Empty;
    }

    string AddMatchPointsErr()
    {
        return !ViewData.ModelState.IsValid && (ViewData.ModelState.GetValidationState($"{nameof(Model.HomePoints)}") == ModelValidationState.Invalid || ViewData.ModelState.GetValidationState($"{nameof(Model.GuestPoints)}") == ModelValidationState.Invalid) ? " input-validation-error" : string.Empty;
    }

    string AddDateErr()
    {
        return !ViewData.ModelState.IsValid && ViewData.ModelState.GetValidationState(nameof(Model.MatchDate)) == ModelValidationState.Invalid ? " input-validation-error" : string.Empty;
    }
}
<div class="mb-0 pb-1">
    <h2 class="h2">@ViewData["Title"]</h2>
    <hr />
    <div site-authorize-resource site-resource="@Model.Match" site-requirement="@League.Authorization.MatchOperations.OverruleResult" class="mb-2">
        @if (Model.IsOverruling)
        {
            <site-alert type="Info">
                <div style="margin: 0 !important">
                    @Localizer["Overruling is enabled"].
                    [<a data-bs-toggle="collapse" href="#overruling-details" aria-expanded="false" class="d-inline-block collapsed link">@(Localizer["Details"])</a>]
                </div>
                <div id="overruling-details" class="collapse">
                    <ul class="mb-0">
                        <li>@Localizer["Results can be changed as long as the competition is running"].</li>
                        <li>@Localizer["Points must be adjusted manually"].</li>
                        <li>@Localizer["All sets containing empty fields will be discarded"].</li>
                        <li>@Localizer["The result entry can be removed. The match goes back to fixtures."]</li>
                        <li>@Localizer["Overruled results are flagged"].</li>
                    </ul>
                </div>
                <a asp-action="@nameof(League.Controllers.Match.EnterResult)" asp-controller="@nameof(League.Controllers.Match)" asp-route-tenant="@TenantContext.SiteContext.UrlSegmentValue" asp-route-id="@Model.Id" class="link">@Localizer["Back standard form"]</a>
            </site-alert>
        }
        else
        {
            <a asp-action="@nameof(League.Controllers.Match.OverruleResult)" asp-controller="@nameof(League.Controllers.Match)" asp-route-tenant="@TenantContext.SiteContext.UrlSegmentValue" asp-route-id="@Model.Id" class="btn btn-secondary">@Localizer["Enable overruling"]</a>
        }
    </div>
    <form method="post" role="form" novalidate>
        <site-validation-summary show="All" warning="@Model.IsWarning"></site-validation-summary>
        <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
        <input hidden="hidden" asp-for="Id" />
        @if (Model.IsOverruling)
        {
            <input hidden="hidden" asp-for="IsOverruling"/>
        }
        <input hidden="hidden" asp-for="Hash" />
        @if (Model.IsWarning)
        {
            <div class="p-1 col-12 col-md-6 border border-warning rounded mb-3">
                <div class="form-check form-check-warning ms-1">
                    <input asp-for="OverrideWarnings" type="checkbox" class="form-check-input">
                    <label class="form-check-label text-warning mt-0" asp-for="OverrideWarnings"></label>
                </div>
            </div>
        }
        <div class="row">
            <div class="mb-3 col-12 col-md-6">
                <label class="mt-0">@Localizer["Opponents"]</label>
                <div><span class="fw-bold">@Model.Opponent!.Home</span><span class="fw-bold">&nbsp;:&nbsp;</span><span class="fw-bold">@Model.Opponent.Guest</span></div>
            </div>
        </div>
        <div class="row">
            <div class="mb-3 col-12 col-md-4">
                <label asp-for="MatchDate" class="form-label"></label>
                <div id="@(Model.MatchDate)-c" class="input-group" data-input-type="date" data-td-target-input="nearest" data-td-target-toggle="nearest">
                    <input asp-for="MatchDate" type="text" asp-format="{0:@(CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern)}" autofocus autocomplete="off" class="form-control@(AddDateErr())" aria-describedby="@nameof(Model.MatchDate)HelpBlock" />
                    <span class="input-group-text" data-td-target="@nameof(Model.MatchDate)-c" data-td-toggle="datetimepicker">
                        <i class="far fa-calendar-alt"></i>
                    </span>
                </div>
                <small id="@nameof(Model.MatchDate)HelpBlock" class="d-block form-text text-muted">
                    @Localizer["Date format"]: @(Localizer[CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern.ToUpperInvariant()])
                </small>
            </div><div class="col"></div>
        </div>
        <div class="row">
            <div class="mb-3 col-12 col-md-4">
                <label asp-for="MatchTimeFrom" class="form-label"></label>
                <div id="@(Model.MatchTimeFrom)-c" class="input-group" data-input-type="time" data-td-target-input="nearest" data-td-target-toggle="nearest">
                    <input asp-for="MatchTimeFrom" type="text" asp-format="{0:@(CultureInfo.CurrentCulture.DateTimeFormat.ShortTimePattern)}" autocomplete="off" class="form-control" aria-describedby="@nameof(Model.MatchTimeFrom)HelpBlock" />
                    <span class="input-group-text" data-td-target="@nameof(Model.MatchTimeFrom)-c" data-td-toggle="datetimepicker">
                        <i class="far fa-clock"></i>
                    </span>
                </div>
                <small id="@nameof(Model.MatchTimeFrom)HelpBlock" class="d-block form-text text-muted">
                    @Localizer["Time format"]: @(CultureInfo.CurrentUICulture.DateTimeFormat.ShortTimePattern.ToUpperInvariant().Replace("TT", "AM/PM"))
                </small>
                <span asp-validation-for="MatchTimeFrom" class="text-danger"></span>
            </div>
            <div class="mb-3 col-12 col-md-4">
                <label asp-for="MatchTimeTo" class="form-label"></label>
                <div id="@(Model.MatchTimeTo)-c" class="input-group" data-input-type="time" data-td-target-input="nearest" data-td-target-toggle="nearest">
                    <input asp-for="MatchTimeTo" type="text" asp-format="{0:@(CultureInfo.CurrentCulture.DateTimeFormat.ShortTimePattern)}" autocomplete="off" class="form-control" aria-describedby="@nameof(Model.MatchTimeTo)HelpBlock" />
                    <span class="input-group-text" data-td-target="@nameof(Model.MatchTimeTo)-c" data-td-toggle="datetimepicker">
                        <i class="far fa-clock"></i>
                    </span>
                </div>
                <small id="@nameof(Model.MatchTimeTo)HelpBlock" class="d-block form-text text-muted">
                    @Localizer["Time format"]: @(CultureInfo.CurrentUICulture.DateTimeFormat.ShortTimePattern.ToUpperInvariant().Replace("TT", "AM/PM"))
                </small>
                <span asp-validation-for="MatchTimeTo" class="text-danger"></span>
            </div>
        </div>
        @{
            for (var i = 0; i < Model.BallPoints.Count; i++)
            {
                var counter = i;
                <div class="row">
                    <label class="form-label">@Localizer["Set #{0}", i + 1]</label>
                    <div class="mb-3 col-12 col-md-4">
                        @if (Model.IsOverruling)
                        {
                            <div class="form-text">@Localizer["Ball Points"]</div>
                        }
                        <div class="input-group">
                            <input asp-for="@Model.BallPoints[counter].Home" type="text" autocomplete="off" class="form-control text-start @(AddBallPointsErr(counter))" style="max-width:5em"/>
                            <span class="input-group-text">
                                :
                            </span>
                            <input asp-for="@Model.BallPoints[counter].Guest" type="text" autocomplete="off" class="form-control text-end @(AddBallPointsErr(counter))" style="max-width:5em"/>
                        </div>
                    </div>
                    
                    @if (Model.IsOverruling)
                    {
                        <div class="mb-3 col-12 col-md-4">
                            <div class="form-text">@Localizer["Set Points"]</div>
                            <div class="input-group">
                                <input asp-for="@Model.SetPoints[counter].Home" type="text" autocomplete="off" class="form-control text-start @(AddSetPointsErr(counter))" style="max-width:5em"/>
                                <span class="input-group-text">
                                    :
                                </span>
                                <input asp-for="@Model.SetPoints[counter].Guest" type="text" autocomplete="off" class="form-control text-end @(AddSetPointsErr(counter))" style="max-width:5em"/>
                            </div>
                        </div>
                    }
                </div>
            }
        }
        @if (Model.IsOverruling)
        {
            <div class="row">
                <label class="form-label">@Localizer["Match Points"]</label>
                <div class="input-group">
                    <input asp-for="@Model.HomePoints" type="text" autocomplete="off" class="form-control text-start @(AddMatchPointsErr())" style="max-width:5em"/>
                    <span class="input-group-text">
                        :
                    </span>
                    <input asp-for="@Model.GuestPoints" type="text" autocomplete="off" class="form-control text-end @(AddMatchPointsErr())" style="max-width:5em"/>
                </div>
            </div>
        }
        <div class="row">
            <div class="mb-3 col-12 col-md-8">
                <label asp-for="Remarks" class="form-label"></label>
                <textarea asp-for="Remarks" row="2" class="form-control" aria-describedby="@nameof(Model.Remarks)HelpBlock"></textarea>
                <small id="@nameof(Model.Remarks)HelpBlock" class="d-block form-text text-muted">
                    @Localizer["Remarks become part of the result submission"]
                </small>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-8">
                <strong>@Localizer["Please double-check all entries before saving"]</strong>
            </div>
        </div>
        <div class="row">
            <div class="mb-3 col-12 mt-2">
                @{
                    if (Model.ReturnUrl != null && Url.IsLocalUrl(Model.ReturnUrl))
                    {
                        <a href="@Model.ReturnUrl" class="btn btn-lg btn-secondary">@Localizer["Cancel"]</a>
                    }
                    else
                    {
                        <a asp-controller="@nameof(League.Controllers.Match)" asp-action="@nameof(League.Controllers.Match.Fixtures)" asp-route-tenant="@tenantUrlSegment" class="btn btn-lg btn-secondary">@Localizer["Cancel"]</a>
                    }
                }
                <button type="submit" value="save" class="btn btn-lg btn-primary me-5" 
                        asp-controller="@nameof(League.Controllers.Match)" asp-action="@nameof(League.Controllers.Match.EnterResult)" asp-route-tenant="@tenantUrlSegment">@Localizer["Save"]</button>
            </div>
        </div>
    </form>
</div>
@section styles
{
    <link rel="stylesheet" href="~/lib/tempus-dominus/tempus-dominus.min.css" asp-append-version="true" />
}
@section scripts
{
    <script type="text/javascript" src="~/lib/tempus-dominus/tempus-dominus.all.min.js" asp-append-version="true"></script>    
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', OnDOMContentLoaded, false);
        function OnDOMContentLoaded() {
            const locale = '@(CultureInfo.CurrentCulture.ToString())';
            const parentLocale = '@(CultureInfo.CurrentCulture.Parent.TwoLetterISOLanguageName)';
            const hourCycle = '@(CultureInfo.CurrentCulture.DateTimeFormat.ShortTimePattern.Contains("t") ? 12 : 24)';

            const tdFactory = new Site.TempusDominusFactory(locale, parentLocale, hourCycle, false);
            [].forEach.call(document.querySelectorAll('[data-input-type="date"]'), function (el) {
                tdFactory.CreateCalendarPicker(el, '@(CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern)');
            });
            [].forEach.call(document.querySelectorAll('[data-input-type="time"]'), function (el) {
                tdFactory.CreateTimePicker(el, '@(CultureInfo.CurrentCulture.DateTimeFormat.ShortTimePattern.Replace("tt", "T"))');
                el._tempusDominus.updateOptions({
                    stepping: 1
                });
            });
        };
    </script>
}