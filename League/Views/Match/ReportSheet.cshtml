@using TournamentManager.MultiTenancy
@using League.Views
@using Microsoft.Extensions.Localization
@inject ITenantContext TenantContext
@inject Axuno.Tools.DateAndTime.TimeZoneConverter TimeZoneConverter
@inject IStringLocalizerFactory StringLocalizerFactory

@model TournamentManager.DAL.TypedViewClasses.MatchReportSheetRow
@{
    Layout = null;
    
    // Injecting an IViewLocalizer does not seem to work when using a RazorViewToStringRenderer,
    // because the resource file can't be found.
    // So we create an IStringLocalizer from the injected IStringLocalizerFactory:
    const string resourceBaseName = $"{nameof(League)}.{nameof(League.Views)}.{nameof(ViewNames.Match)}.{ViewNames.Match.ReportSheet}";
    var localizer = StringLocalizerFactory.Create(resourceBaseName, nameof(League));

    ViewData["Title"] = localizer["Match Report Sheet"].Value;
    var ballPointsToWin = new List<int>();
    if (Model.BestOf)
    {
        for (var i = 0; i < Model.NumOfSets - 1; i++)
        {
            ballPointsToWin.Add(Model.NumOfPointsToWinRegular);
        }
        ballPointsToWin.Add(Model.NumOfPointsToWinTieBreak);
    }
    else
    {
        for (var i = 0; i < Model.NumOfSets; i++)
        {
            ballPointsToWin.Add(Model.NumOfPointsToWinRegular);
        }
    }

    var numberOfSets = ballPointsToWin.Count;
    var numOfSubstitutions = Model.MaxSubstitutions;
    var numOfTimeOuts = Model.MaxTimeouts;
    var bsRowCol = string.Empty;
    if (numberOfSets == 1)
    {
        bsRowCol = "row-cols-1";
    }
    else if (numberOfSets == 2)
    {
        bsRowCol = "row-cols-2";
    }
    else if (numberOfSets == 3)
    {
        bsRowCol = "row-cols-3";
    }
    else if (numberOfSets == 4)
    {
        bsRowCol = "row-cols-4";
    }
    else if (numberOfSets == 5)
    {
        bsRowCol = "row-cols-5";
    }

    string Repeat(string s, int n)
    {
        var result = string.Empty;
        for (var i = 0; i < n; i++)
        {
            result += s;
        }
        return result;
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <style type="text/css">
        @* 
            <!-- Bootstrap 5 (compared to Bootstrap 4) no longer includes custom CSS for printing -->
            <!-- This is a copy of the Bootstrap 4 print styles -->
            <!-- Source: https://github.com/coliff/bootstrap-print-css and https://christianoliff.com/blog/bootstrap-5-print-stylesheet/ --> 
        *@
        @@media print {
            *,
            *::before,
            *::after {
                text-shadow: none !important;
                box-shadow: none !important;
            }
            a:not(.btn) {
                text-decoration: underline;
            }
            abbr[title]::after {
                content: " (" attr(title) ")";
            }
            pre {
                white-space: pre-wrap !important;
            }
            pre,
            blockquote {
                border: 1px solid #adb5bd;
                page-break-inside: avoid;
            }
            tr,
            img {
                page-break-inside: avoid;
            }
            p,
            h2,
            h3 {
                orphans: 3;
                widows: 3;
            }
            h2,
            h3 {
                page-break-after: avoid;
            }
            @@page {
                size: a3;
            }
            body {
                min-width: 992px !important;
            }
            .container {
                min-width: 992px !important;
            }
            .badge {
                border: 1px solid #000;
            }
            .table {
                border-collapse: collapse !important;
            }
            .table td,
            .table th {
                background-color: #fff !important;
            }
            .table-bordered th,
            .table-bordered td {
                border: 1px solid #dee2e6 !important;
            }
            .table-dark {
                color: inherit;
            }
            .table-dark th,
            .table-dark td,
            .table-dark thead th,
            .table-dark tbody + tbody {
                border-color: #dee2e6;
            }
        }
    </style>
    <style type="text/css">
        @* <!-- Custom styles for League ReportSheet --> *@
        @@media print {
            @@page {
                size: 210mm 297mm;
                margin: 0; /* removes header and footer when printing with browsers */
            }

            div.container {
                padding: 5mm 8mm 0 8mm !important
            }
        }

        @@media screen {
            body {
                margin-top: 1rem;
            }
        }

        body {
            background-color: white;
            font-family: Arial, Helvetica, sans-serif;
            font-size: 12pt;
        }

        .team-circle {
            background: #ffffff;
            color: #000;
            padding: 5px 20px;
            border-radius: 50%;
            border: 1px solid black;
            font-size: 35px;
        }

        .border {
            border: 1px solid black !important;
        }

        .border-left {
            border-left: 1px solid black !important;
        }

        .border-right {
            border-right: 1px solid black !important;
        }

        .border-top {
            border-top: 1px solid black !important;
        }

        .border-bottom {
            border-bottom: 1px solid black !important;
        }

        .border-bottom-0 {
            border-bottom: 0 !important
        }

        .border-top-0 {
            border-top: 0 !important
        }

        .border-right-0 {
            border-right: 0 !important
        }

        .border-left-0 {
            border-left: 0 !important
        }

        .team-circle-small {
            background: #ffffff;
            color: #000;
            padding: 0px 5px;
            border-radius: 50%;
            border: 1px solid black;
            font-size: 12pt;
            margin-left: 5px;
            margin-right: 5px;
        }

        .dotted-line {
            border-bottom: 1px dashed black;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12 text-center">
                <div>@TenantContext.OrganizationContext.Name - @Model.TournamentName</div>
                <div style="font-size: 14pt; font-weight: bold">@ViewData["Title"] - @Model.RoundDescription</div>
            </div>
            <div class="col-6 text-start" style="padding: 0">
                <div>&nbsp;</div>
                <div>@localizer["Team"] <span class="team-circle-small">A</span><strong> @Model.HomeTeamNameForRound</strong></div>
                <div>@localizer["Team"] <span class="team-circle-small">B</span><strong> @Model.GuestTeamNameForRound</strong></div>
            </div>
            <div class="col-6" style="padding: 0">
                <div class="text-end">
                    @(Model.OrigPlannedStart.HasValue ? $"{localizer["Changed date"].Value}:" : $"{localizer["Date"].Value}:")
                    @if (Model.PlannedStart.HasValue && TimeZoneConverter != null)
                    {
                        @($"{TimeZoneConverter.ToZonedTime(Model.PlannedStart)!.DateTimeOffset.DateTime:D} - {TimeZoneConverter.ToZonedTime(Model.PlannedStart)!.DateTimeOffset.DateTime:t}")
                    }
                    else
                    {
                        <text>___________</text>
                    }
                </div>
                <div class="text-end">@localizer["Start time"]: ___________</div>
                <div class="text-end">@localizer["End time"]: ___________</div>
            </div>
        </div>
        <div style="height: .8em"></div>
        <div class="row @bsRowCol">
            @for (var i = 1; i <= numberOfSets; i++)
            {
                <div class="col text-center border border-bottom-0">
                    <strong>@localizer["Set #{0}", i]</strong>
                </div>
            }
            @for (var i = 1; i <= numberOfSets; i++)
            {
                <div class="col text-center border border-top-0 border-right-0">
                    <div class="row">
                        <div class="col-6 border border-left-0 pt-1 pb-1"><span class="team-circle">&nbsp;</span></div>
                        <div class="col-6 border border-left-0 pt-1 pb-1"><span class="team-circle">&nbsp;</span></div>
                    </div>
                    @for (var points = 1; points < 31; points++)
                    {
                        <div class="row">
                            <div class="col-6 border-right@(ballPointsToWin[i - 1] == points ? " dotted-line" : string.Empty)">@points</div>
                            <div class="col-6 border-right@(ballPointsToWin[i - 1] == points ? " dotted-line" : string.Empty)">@points</div>
                        </div>
                    }
                </div>
            }
            @for (var i = 1; i <= numberOfSets; i++)
            {
                <div class="col text-center border border-top-0">
                    O&nbsp;&nbsp;@localizer["1st service"]&nbsp;&nbsp;O
                </div>
            }
            @if (numOfTimeOuts > 0)
            {
                for (var i = 1; i <= numberOfSets; i++)
                {
                    <div class="col text-center border border-top-0">
                        @Repeat("O ", numOfTimeOuts)&nbsp;&nbsp;&#x1F551;&nbsp;&nbsp;@Repeat(" O", numOfTimeOuts)&nbsp;
                    </div>
                }
            }
            @if (numOfSubstitutions > 0)
            {
                for (var i = 1; i <= numberOfSets; i++)
                {
                    <div class="border border-top-0 p-0">
                        <div class="row no-gutters">
                            <div class="col-5 text-end p-0">@Repeat("O ", numOfSubstitutions)</div>
                            <div class="col-2 text-center p-0">&nbsp;&rlarr;&nbsp;</div>
                            <div class="col-5 text-start p-0">@Repeat(" O", numOfSubstitutions)</div>
                        </div>
                    </div>
                }
            }
        </div>
        <div style="height: .8em"></div>
        <div class="row">
            <div class="col-6 border">
                <div class="row">
                    <div class="col-4 border">
                        <div class="text-start">@localizer["Results"]</div><div class="text-end">@localizer["Team"]</div>
                    </div>
                    <div class="col-4 text-center border pt-1 pb-1">
                        <span class="team-circle">&nbsp;</span>
                    </div>
                    <div class="col-4 text-center border pt-1 pb-1">
                        <span class="team-circle">&nbsp;</span>
                    </div>

                    @{
                        if (numberOfSets > 1)
                        {
                            for (var i = 1; i <= numberOfSets; i++)
                            {
                                <div class="col-4 border" style="line-height: 2rem">
                                    @localizer["Set #{0}", i]
                                </div>
                                <div class="col-4 text-center border">

                                </div>
                                <div class="col-4 text-center border">

                                </div>
                            }
                        }
                    }

                    <div class="col-4 border" style="line-height: 2rem">
                        @localizer["Ball points"]
                    </div>
                    <div class="col-4 text-center border">

                    </div>
                    <div class="col-4 text-center border">

                    </div>
                    <div class="col-4 border" style="line-height: 2rem">
                        @localizer["Set points"]
                    </div>
                    <div class="col-4 text-center border">

                    </div>
                    <div class="col-4 text-center border">

                    </div>
                    <div class="col-4 border" style="line-height: 2rem">
                        @localizer["Match points"]
                    </div>
                    <div class="col-4 text-center border">

                    </div>
                    <div class="col-4 text-center border">

                    </div>
                </div>
            </div>
            <div style="width: 5px">
                &nbsp;
            </div>
            <div class="col border">
                <div class="row h-100">
                    <div class="col-12" style="border: 3px solid black">@localizer["Winner"]:<br />&nbsp;</div>
                    <div class="col-12">&nbsp;<br />&nbsp;<br />&nbsp;</div>
                    <div class="col-12 border border-left-0 border-right-0 text-center">&uarr; @localizer["Signature"] @localizer["Team"] <span class="team-circle-small">A</span> &uarr;</div>
                    <div class="col-12">&nbsp;<br />&nbsp;<br />&nbsp;</div>
                    <div class="col-12 border border-left-0 border-right-0 text-center">&uarr; @localizer["Signature"] @localizer["Team"] <span class="team-circle-small">B</span> &uarr;</div>
                </div>
            </div>
            <div class="col-12 text-center">
                https://www.volleyball-liga.de/@TenantContext.SiteContext.UrlSegmentValue
            </div>
        </div>
    </div>
</body>
</html>
