@using System.Globalization
@using System.Linq
@using League.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using TournamentManager.DAL.TypedViewClasses
@using TournamentManager.DI
@using TournamentManager.MultiTenancy
@using TournamentManager.DAL.EntityClasses
@using League.MultiTenancy @* don't remove *@
@inject IViewLocalizer Localizer
@inject ITenantContext TenantContext
@inject TenantLink TenantLink
@inject RegionInfo Region
@inject PhoneNumberService PhoneNumberService
@model League.Models.TeamViewModels.MyTeamShowModel
@{
    ViewData["Title"] = Localizer["My Team"].Value + " - " + Model.Tournament!.Name;
    var tenantUrlSegment = TenantContext.SiteContext.UrlSegmentValue;
    string DisplayPhoneNo(string phoneNo)
    {
        return PhoneNumberService.Format(phoneNo, Region.TwoLetterISORegionName);
    }
    string TelUriPhoneNo(string phoneNo)
    {
        return PhoneNumberService.FormatAsTelephoneUri(phoneNo, Region.TwoLetterISORegionName);
    }
}
<div class="mb-0 pb-2">
    <h2 class="h2">@ViewData["Title"]</h2>
    <hr class="mb-3" />
    <partial name="@nameof(League.Views.ViewNames.Team._MyTeamMessagesPartial)" />
    @if (Model.TeamVenueRoundInfos.Count > 1)
    {
        <ul class="nav nav-tabs mb-3" id="team-tabs" role="tablist">
            @foreach (var team in Model.TeamVenueRoundInfos)
            {
                <li class="nav-item"><a id="team-@team.TeamId" class="nav-link py-1@{if (team.TeamId == Model.ActiveTeamId){<text> active</text>}}" data-bs-toggle="tab" href="#tab-@(team.TeamId)" role="tab" aria-controls="@team.TeamName">@team.TeamName</a></li>
            }
        </ul>
    }
    <div class="tab-content" id="nav-teamContent">
        @foreach (var teamVenueInfo in Model.TeamVenueRoundInfos)
        {
            var teamPhotoInfo = Model.TeamPhotoStaticFile!.GetUriInfo(teamVenueInfo.TeamId);
            var zonedLastModified = Model.TimeZoneConverter.ToZonedTime(teamPhotoInfo.Date)!;

            <div class="tab-pane@{if (Model.TeamUserRoundInfos.Any(tvr => tvr.TeamId == Model.ActiveTeamId)){<text> show active</text>}}" id="tab-@(teamVenueInfo.TeamId)" role="tabpanel" aria-labelledby="@teamVenueInfo.TeamName-tab">
                <div class="card pb-2 mb-3">
                    <div class="card-header px-2 py-1">
                        <div class="d-flex justify-content-between align-items-baseline">
                            <h4 class="h4">@Localizer["Team"]</h4>
                            <div>
                                <button type="button" site-toggle-modal-ajax
                                        site-data-url="@TenantLink.Action(nameof(Team.Edit), nameof(Team), new { teamId = teamVenueInfo.TeamId })"
                                        site-authorize-resource site-resource="@(new TeamEntity(teamVenueInfo.TeamId))"
                                        site-requirement="@League.Authorization.TeamOperations.EditTeam" class="btn btn-sm btn-primary">
                                    @Localizer["Edit"]
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-text px-2 py-1">
                        <div class="text-success col-12">@Localizer["Round"]</div>
                        <div class="col-12"><span class="fw-bold d-inline-block me-3">@teamVenueInfo.RoundDescription</span><span class="text-muted small">@teamVenueInfo.RoundTypeDescription</span></div>
                        <div class="text-success col-12">@Localizer["Team name"]</div>
                        <div class="col-12 fw-bold">@teamVenueInfo.TeamName</div>
                        @if (!string.IsNullOrEmpty(teamVenueInfo.TeamClubName))
                        {
                            <div class="text-success col-12">@Localizer["Club"]</div>
                            <div class="col-12">@teamVenueInfo.TeamClubName</div>
                        }
                        @if (teamVenueInfo.MatchDayOfWeek.HasValue && teamVenueInfo.MatchTime.HasValue)
                        {
                            // MatchTime is defined as a zoned time, NOT UTC. It is always the same, never mind DST
                            <div class="text-success col-12">@Localizer["Home match day"]</div>
                            <div class="col-12 mb-2"><i class="far fa-calendar-alt"></i><span class="d-inline-block me-2"></span>@DateTimeFormatInfo.CurrentInfo?.GetDayName((DayOfWeek)teamVenueInfo.MatchDayOfWeek), @(DateTime.UtcNow.Date.Add(teamVenueInfo.MatchTime.Value).ToShortTimeString()) @(Model.TimeZoneConverter.ToZonedTime(DateTime.UtcNow)?.Abbreviation)</div>
                        }
                        <div class="text-muted small col-12">
                            @{ var zonedTime = Model.TimeZoneConverter.ToZonedTime(teamVenueInfo.TeamModifiedOn)!;}
                            @Localizer["Last update"]: @zonedTime.DateTimeOffset.DateTime.ToShortDateString() @zonedTime.DateTimeOffset.DateTime.ToLongTimeString() @zonedTime.Abbreviation
                        </div>
                        <div class="text-success col-12">@Localizer["Team photo"]</div>
                        @if (teamPhotoInfo.Uri != null)
                        {
                            <div class="col-12">
                                <span class="d-inline-block me-2"><i class="fas fa-camera"></i> @Localizer["Photo of {0}", zonedLastModified.DateTimeOffset.DateTime.ToShortDateString() + " " + zonedLastModified.Abbreviation]</span>
                                <a class="btn btn-sm btn-primary d-inline-block me-2" data-bs-target="#show-team-photo-@(teamVenueInfo.TeamId)" data-bs-toggle="modal" href="#">
                                    @Localizer["View"]
                                </a>
                                <a class="btn btn-sm btn-primary d-inline-block"
                                   asp-controller="@nameof(Upload)"
                                   asp-action="@nameof(Upload.TeamPhoto)"
                                   asp-route-tenant="@tenantUrlSegment"
                                   asp-route-id="@teamVenueInfo.TeamId"
                                   site-authorize-resource site-resource="@(new TeamEntity(teamVenueInfo.TeamId))"
                                   site-requirement="@League.Authorization.TeamOperations.ChangePhoto">@Localizer["Change"]</a>
                            </div>
                        }
                        else
                        {
                            <div class="col-12">
                                <i class="fas fa-camera"></i>
                                <span class="d-inline-block mx-2 text-danger">@Localizer["No team photo has been uploaded"]</span>
                                <a class="btn btn-sm btn-primary d-inline-block"
                                   asp-controller="@nameof(Upload)"
                                   asp-action="@nameof(Upload.TeamPhoto)"
                                   asp-route-tenant="@tenantUrlSegment"
                                   asp-route-id="@teamVenueInfo.TeamId"
                                   site-authorize-resource site-resource="@(new TeamEntity(teamVenueInfo.TeamId))"
                                   site-requirement="@League.Authorization.TeamOperations.ChangePhoto">@Localizer["Upload"]</a>
                            </div>
                        }
                    </div>
                </div>
                <div class="card mb-3">
                    <div class="card-header px-2 py-1">
                        <div class="d-flex justify-content-between align-items-baseline">
                            <h4 class="h4">@Localizer["Venue"]</h4>
                            <div>
                                <button type="button"
                                        site-toggle-modal-ajax site-data-url="@TenantLink.Action(nameof(Team.ChangeVenue), nameof(Team), new { tid = teamVenueInfo.TeamId })"
                                        site-authorize-resource site-resource="@(new TeamEntity(teamVenueInfo.TeamId))"
                                        site-requirement="@League.Authorization.TeamOperations.EditTeam"
                                        class="btn btn-sm btn-primary">
                                    @Localizer["Edit"]
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-text px-2 py-1">
                            <div class="col-12 mb-2">
                                @if (teamVenueInfo.VenueId.HasValue)
                                {
                                    <div><i class="fas fa-map-marker-alt"></i><span class="d-inline-block me-2"></span><span class="fw-bold">@teamVenueInfo.VenueName</span> <span>@{if (!string.IsNullOrWhiteSpace(teamVenueInfo.VenueExtension))
                                        {<text>(@teamVenueInfo.VenueExtension)</text>}}</span></div>
                                    <div>@(string.Join(", ", teamVenueInfo.VenuePostalCode, teamVenueInfo.VenueCity, teamVenueInfo.VenueStreet))</div>
                                    <div>
                                        <a class="link" asp-action="@nameof(Map.Venue)"
                                           asp-controller="@nameof(Map)"
                                           asp-route-tenant="@tenantUrlSegment"
                                           asp-route-id="@teamVenueInfo.VenueId.Value">@Localizer["Direction"]</a>
                                    </div>
                                    <div class="text-muted small">
                                        @{ zonedTime = Model.TimeZoneConverter.ToZonedTime(teamVenueInfo.VenueModifiedOn)!;}
                                        @Localizer["Last update"]: @zonedTime.DateTimeOffset.DateTime.ToShortDateString() @zonedTime.DateTimeOffset.DateTime.ToLongTimeString() @zonedTime.Abbreviation
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        <i class="fas fa-map-marker-alt"></i><span class="d-inline-block me-2"></span>
                                        @Localizer["There is no venue assigned to the team"].
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card pb-2 mb-2">
                        <div class="card-header px-2 py-1">
                            <div class="d-flex justify-content-between align-items-baseline">
                                <h4 class="h4">@Localizer["Team members"]</h4>
                                <div>
                                    <button type="button"
                                            site-toggle-modal-ajax
                                            site-data-url="@TenantLink.Action(nameof(Role.Add),
                                                           nameof(Role), new { tid = teamVenueInfo.TeamId, ReturnUrl = TenantLink.Action(nameof(Team.MyTeam), nameof(Team), new { id = teamVenueInfo.TeamId})})} )"
                                            site-authorize-resource site-resource="@(new TeamEntity(teamVenueInfo.TeamId))"
                                            site-requirement="@League.Authorization.TeamOperations.AddTeamMember"
                                            class="btn btn-sm btn-primary">
                                        @Localizer["Add"]
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-text px-2 py-1">
                            @{
                                var predicates = new List<Func<TeamUserRoundRow, bool>> { r => r.IsManager == true, r => r.IsPlayer == true };
                                var userInfos = Model.TeamUserRoundInfos.Where(tur => tur.TeamId == teamVenueInfo.TeamId).ToList();
                                if (userInfos.Count > 0)
                                {
                                    var currentRole = string.Empty;
                                    // if a user is manager AND ALSO player, she will be shown as manager
                                    // because DISTINCT() first selects managers (are first in the predicate list)
                                    foreach (var userInfo in predicates.SelectMany(predicate => userInfos.Where(predicate)).Distinct())
                                    {
                                        if (currentRole != (userInfo.IsManager ? Localizer["Team contact"].Value : Localizer["Player"].Value))
                                        {
                                            currentRole = userInfo.IsManager ? Localizer["Team contact"].Value : Localizer["Player"].Value;
                                            <div class="text-success col-12 mt-2">@(currentRole)</div>
                                        }

                                        <div class="col-12">
                                            <div class="font-weight-normal">
                                                <a data-bs-toggle="collapse" href="#user-@userInfo.UserId" aria-expanded="false" class="d-inline-block collapsed">
                                                    <i class="fas fa-user"></i><span class="username d-inline-block ms-2 me-2">@userInfo.CompleteNameWithNickName</span>
                                                    <i class="fas fa-chevron-left pull-end text-success"></i>
                                                </a>
                                            </div>
                                            <div id="user-@userInfo.UserId" class="collapse mb-2 ms-5">
                                                <div><i class="far fa-envelope"></i><span class="d-inline-block me-2"></span><a href="mailto:@userInfo.Email">@userInfo.Email</a></div>
                                                <span class="d-inline-block me-4">
                                                    <i class="fas fa-phone-square-alt"></i><span class="d-inline-block me-2"></span><a href="@TelUriPhoneNo(userInfo.PhoneNumber)">@DisplayPhoneNo(userInfo.PhoneNumber)</a>
                                                </span>
                                                @if (!string.IsNullOrEmpty(userInfo.PhoneNumber2))
                                                {
                                                    <span class="d-inline-block text-nowrap">
                                                        <i class="fas fa-phone-square-alt"></i>
                                                        <a href="@TelUriPhoneNo(userInfo.PhoneNumber2)">@DisplayPhoneNo(userInfo.PhoneNumber2)</a>
                                                    </span>
                                                }
                                                <div>
                                                    <button type="button"
                                                            site-toggle-modal-ajax site-data-url="@TenantLink.Action(nameof(Role.Remove), nameof(Role), new { rolename = userInfo.IsManager ? League.Identity.Constants.ClaimType.ManagesTeam : League.Identity.Constants.ClaimType.PlaysInTeam, uid = userInfo.UserId, un = userInfo.CompleteName, tid = teamVenueInfo.TeamId, ReturnUrl = TenantLink.Action(nameof(Team.MyTeam), nameof(Team), new { id = teamVenueInfo.TeamId})})"
                                                            site-authorize-resource site-resource="@(new TeamEntity(teamVenueInfo.TeamId))"
                                                            site-requirement="@League.Authorization.TeamOperations.RemoveTeamMember"
                                                            class="btn btn-sm btn-primary">
                                                        @Localizer["Remove"]
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                            }
                        </div>
                    </div>
                </div>
                <modal id="show-team-photo-@(teamVenueInfo.TeamId)" title="@Localizer["Team photo"].Value" dialog-class="modal-md">
                    <modal-body>
                        @if (teamPhotoInfo.Uri != null)
                        {
                            <div><img src="@Url.Content(teamPhotoInfo.Uri)" class="img-fluid img-thumbnail" alt="@(teamVenueInfo.TeamName)" /></div>
                            <div><small class="text-muted">@Localizer["Photo uploaded on"] @zonedLastModified.DateTimeOffset.DateTime.ToShortDateString() @zonedLastModified.DateTimeOffset.DateTime.ToLongTimeString().Replace("12:00:00 AM", "").Replace("00:00:00", "") @zonedLastModified.Abbreviation</small></div>
                        }
                    </modal-body>
                </modal>
            }
    </div>
</div>
@section styles
{
    <link rel="stylesheet" href="~/lib/tempus-dominus/tempus-dominus.min.css" asp-append-version="true"/>
    <style type="text/css">
        @* Team members *@

        .fas.fa-chevron-left {
            transition: .3s transform ease-in-out;
        }

        a.collapsed .fas.fa-chevron-left {
            transform: rotate(-90deg);
        }

        .collapsed .username {
            font-weight: normal;
        }

        .username {
            font-weight: bold;
        }

        @* TeamVenueSelect *@

        #venue-list tbody tr {
            border-bottom: solid 2px lightgray
        }

        #venue-list thead {
            background-color: lightgray
        }

        #venue-list td {
            cursor: pointer;
        }

        #venue-picker .input-group {
            cursor: pointer;
        }
        
        /* Start: Change checkbox color */
        .form-check.form-check-warning > input[type=checkbox]:checked {
            background-color: var(--bs-warning);
        }

        .form-check.form-check-warning > input[type=checkbox] {
            border: 2px solid var(--bs-warning);
            background-color: transparent;
        }
        /* End: Change checkbox color */
    </style>
}
@section scripts
{
    @* tempus-dominus is required for EditTeam modal *@
    <script type="text/javascript" src="~/lib/tempus-dominus/tempus-dominus.all.min.js" asp-append-version="true"></script>
}