@using League.Components
@model (League.Components.MainNavigationComponentModel MainNav, League.Components.MainNavigationComponentModel.NavigationNode Node)
@if (Model.Node.HasVisibleChildNodes())
{
    <ul class="dropdown-menu shadow@(ViewData["dropdown-menu-end"])" style="margin-top: -0.3rem">
        @foreach (var childNode in Model.Node.ChildNodes)
        {
            if (childNode.Text == "Separator")
            {
                <li>
                    <hr class="dropdown-divider">
                </li>
                continue;
            }

            if (!childNode.ShouldShow())
            {
                continue;
            }

            if (childNode.HasVisibleChildNodes())
            {
                <li>
                    <a href="@Url.Content(childNode.Url!)" class="@(await Model.MainNav.GetClassAsync(Context, childNode, "dropdown-item", "active", true))">@childNode.Text</a>
                </li>
            }
            else
            {
                <li>
                    <a href="@Url.Content(childNode.Url!)" class="@(await Model.MainNav.GetClassAsync(Context, childNode, "dropdown-item", "active", true))">@childNode.Text</a>
                    <partial name="@League.Views.ViewNames.Shared.NavigationNodeChildDropdownPartial" model="(Model.MainNav, childNode)" /> @*recursion*@
                </li>
            }
        }
    </ul>
}

