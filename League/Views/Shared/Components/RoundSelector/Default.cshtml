@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model League.Components.RoundSelectorComponentModel
@{
    Layout = null;
    ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix = Model.HtmlFieldPrefix;
    var round = Model.RoundWithTypeList.FirstOrDefault(rt => rt.Id == Model.SelectedRoundId);
}
<div class="row">
    <div class="mb-3 col-12 col-md-6">
        @if (Model.ShowSelector)
        {
            <label asp-for="SelectedRoundId" class="form-label"></label>
            <select asp-for="SelectedRoundId" class="form-select d-block col-7" style="min-width: max-content !important" title="@Localizer["Please select a round"]...">
                <option value="" selected="@(Model.SelectedRoundId == null && Model.EnforceExplicitSelection ? "selected" : null)" disabled hidden>
                    @Localizer["Please select a round"]...
                </option>
                @foreach (var rwt in Model.RoundWithTypeList)
                {
                    if (rwt.Id == Model.SelectedRoundId)
                    {
                        <option value="@rwt.Id" selected="selected">@rwt.Description&nbsp;&nbsp;(@rwt.RoundType.Description)</option>
                    }
                    else
                    {
                        <option value="@rwt.Id">@rwt.Description&nbsp;&nbsp;(@rwt.RoundType.Description)</option>
                    }
                }
            </select>
        }
        @if(!Model.ShowSelector)
        {
            <label asp-for="SelectedRoundId" class="form-label"></label>
            <div class="ms-0">
                <span class="d-inline-block fw-bold me-2">@(round?.Description ?? Localizer["Not specified"].Value)</span>
                <span class="text-muted small">@(round?.RoundType?.Description ?? string.Empty)</span>
                <small class="d-block form-text text-muted">
                    @Localizer["Can only be edited as long as no matches exist"]
                </small>
            </div>
        }
    </div>
</div>