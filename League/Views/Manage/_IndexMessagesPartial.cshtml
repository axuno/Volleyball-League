@using League.Helpers
@using Microsoft.AspNetCore.Mvc.Localization
@inject MetaDataHelper Metadata
@inject IViewLocalizer Localizer
@model ManageMessage?
@{
    if (Model == null) return;
    const string settingHasBeenUpdated = "Setting for '{0}' has been updated";
    const string hasBeenSet = "'{0}' has been set";
    const string settingUpdateFailed = "Changing the setting for '{0}' failed";

    <site-alert type="@Model.AlertType">
        @switch (Model.MessageId)
        {
            case MessageId.ChangeUsernameSuccess:
                @Localizer[settingHasBeenUpdated, Metadata.GetDisplayName<ChangeUsernameViewModel>(nameof(ChangeUsernameViewModel.Username))!]
                break;
            case MessageId.ChangeUsernameFailure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<ChangeUsernameViewModel>(nameof(ChangeUsernameViewModel.Username))!]
                break;
            case MessageId.ChangePasswordSuccess:
                @Localizer[settingHasBeenUpdated, Metadata.GetDisplayName<RegisterViewModel>(nameof(RegisterViewModel.Password))!]
                break;
            case MessageId.ChangePasswordFailure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<RegisterViewModel>(nameof(RegisterViewModel.Password))!]
                break;
            case MessageId.SetPasswordSuccess:
                @Localizer[hasBeenSet, Metadata.GetDisplayName<RegisterViewModel>(nameof(RegisterViewModel.Password))!]
                break;
            case MessageId.SetPasswordFailure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<RegisterViewModel>(nameof(RegisterViewModel.Password))!]
                break;
            case MessageId.ChangeEmailConfirmationSent:
                W‌rite(Localizer["A confirmation code has been sent to the new primary email"]);
                break;
            case MessageId.ChangeEmailSuccess:
                @Localizer[settingHasBeenUpdated, Metadata.GetDisplayName<ChangeEmailViewModel>(nameof(ChangeEmailViewModel.Email))!]
                break;
            case MessageId.ChangeEmailFailure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<ChangeEmailViewModel>(nameof(ChangeEmailViewModel.Email))!]
                break;
            case MessageId.ChangeEmail2Success:
                @Localizer[settingHasBeenUpdated, Metadata.GetDisplayName<EditEmail2ViewModel>(nameof(EditEmail2ViewModel.Email2))!]
                break;
            case MessageId.ChangeEmail2Failure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<EditEmail2ViewModel>(nameof(EditEmail2ViewModel.Email2))!]
                break;
            case MessageId.ChangePersonalDetailsSuccess:
                W‌rite(Localizer["Your personal details have been updated"]);
                break;
            case MessageId.ChangePersonalDetailsFailure:
                W‌rite(Localizer["Updating your personal details failed"]);
                break;
            case MessageId.ChangePhoneSuccess:
                @Localizer[settingHasBeenUpdated, Metadata.GetDisplayName<EditPhoneViewModel>(nameof(EditPhoneViewModel.PhoneNumber))!]
                break;
            case MessageId.ChangePhoneFailure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<EditPhoneViewModel>(nameof(EditPhoneViewModel.PhoneNumber))!]
                break;
            case MessageId.ChangePhone2Success:
                @Localizer[settingHasBeenUpdated, Metadata.GetDisplayName<EditPhone2ViewModel>(nameof(EditPhone2ViewModel.PhoneNumber2))!]
                break;
            case MessageId.ChangePhone2Failure:
                @Localizer[settingUpdateFailed, Metadata.GetDisplayName<EditPhone2ViewModel>(nameof(EditPhone2ViewModel.PhoneNumber2))!]
                break;
            case MessageId.ManageLoginFailure:
                W‌rite(Localizer["Trying to manage social logins failed"]);
                break;
            case MessageId.AddLoginSuccess:
                W‌rite(Localizer["Social login account has been added"]);
                break;
            case MessageId.AddLoginFailure:
                W‌rite(Localizer["Adding social login account failed"]);
                break;
            case MessageId.RemoveLoginSuccess:
                W‌rite(Localizer["Social login account has been removed"]);
                break;
            case MessageId.RemoveLoginFailure:
                W‌rite(Localizer["Removing social login account failed"]);
                break;
            default:
                throw new ArgumentOutOfRangeException();
        }
    </site-alert>
}