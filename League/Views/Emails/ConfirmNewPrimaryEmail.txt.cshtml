@inject IViewLocalizer Localizer
@inject IOptions<DataProtectionTokenProviderOptions> TokenProviderOptions
@inject Axuno.Tools.DateAndTime.TimeZoneConverter TimeZoneConverter
@{
    Layout = null;
    var changeEmail = Localizer["Change your primary email address"].Value;
    var pleaseConfirm = string.Format($"{Localizer["Please confirm the new email address by clicking this link"].Value}:");
    var tokenExpiresOn = TimeZoneConverter.ToZonedTime(DateTime.UtcNow.Add(TokenProviderOptions.Value.TokenLifespan));
    var deadline = string.Format("{0:d} {0:HH:00 'h'} {1}", tokenExpiresOn.DateTimeOffset.DateTime, tokenExpiresOn.Abbreviation);
}
@using League.DI
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@*ValueTuple*@
@model (string Email, string CallbackUrl, TournamentManager.Data.OrganizationContext OrganizationContext)
@Html.Raw(changeEmail)

@Html.Raw(pleaseConfirm)

@Html.Raw(Model.CallbackUrl)
@Html.Raw(Localizer["The confirmation link can be used once until"].Value) @Html.Raw(deadline).

@Html.Raw(Model.OrganizationContext.Name)
