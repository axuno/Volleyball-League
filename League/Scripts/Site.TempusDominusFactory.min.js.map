{"version":3,"file":"Site.TempusDominusFactory.min.js","sources":["Site.TempusDominusFactory.js"],"sourcesContent":["// All Site scripts go into the same namespace\r\nif (Site === undefined) {\r\n    var Site = {};\r\n}\r\n\r\nSite.TempusDominusFactory = class {\r\n    'use strict';\r\n    /**\r\n    * Represents a TempusDominusFactory.\r\n    * @constructor\r\n    * @param {string} locale - The locale name including region, e.g. \"en-US\".\r\n    * @param {string} fallbackLocale - The fallback locale to use, e.g. \"en\".\r\n    * @param {int} hourCycle - The hour cycle, which can be 12 or 24. Used to make TempusDominus behave like .NET\r\n    * @param {boolean} useBiIcons - True, when Bootstrap Icons shall be used\r\n    */\r\n    constructor(locale, fallbackLocale, hourCycle, useBiIcons) {\r\n        this.tdLocale = tempusDominus.locales[locale] || tempusDominus.locales[fallbackLocale];\r\n        // .NET always uses ante meridiem designator for hours 0:00:00 (midnight) to 11:59:59.999,\r\n        // and post meridiem designator for later hours (after noon).\r\n        this.tdHourCycle = hourCycle == 12 ? 'h11' : 'h23';\r\n        this.useBiIcons = useBiIcons;\r\n\r\n        this._setTdDefaults();\r\n    }\r\n\r\n    _setTdDefaults() {\r\n        if (this.tdLocale) {\r\n            // Set the locale, if it's not the default (en):\r\n            tempusDominus.DefaultOptions.localization = this.tdLocale.localization;\r\n            tempusDominus.DefaultOptions.localization.hourCycle = this.tdHourCycle;\r\n        }\r\n        \r\n        // Change year to 4 digits instead of 2:\r\n        tempusDominus.DefaultOptions.localization.dayViewHeaderFormat = { month: 'long', year: 'numeric' };\r\n\r\n        if (this.useBiIcons) {\r\n            tempusDominus.DefaultOptions.display.icons = {\r\n                time: 'bi bi-clock',\r\n                date: 'bi bi-calendar',\r\n                up: 'bi bi-arrow-up',\r\n                down: 'bi bi-arrow-down',\r\n                previous: 'bi bi-chevron-left',\r\n                next: 'bi bi-chevron-right',\r\n                today: 'bi bi-calendar-check',\r\n                clear: 'bi bi-trash',\r\n                close: 'bi bi-x bi-lg'\r\n            };\r\n        } else {\r\n            tempusDominus.DefaultOptions.display.icons = {\r\n                time: 'fas fa-clock',\r\n                date: 'fas fa-calendar',\r\n                up: 'fas fa-arrow-up',\r\n                down: 'fas fa-arrow-down',\r\n                previous: 'fas fa-chevron-left',\r\n                next: 'fas fa-chevron-right',\r\n                today: 'fas fa-calendar-check',\r\n                clear: 'fas fa-trash',\r\n                close: 'fas fa-times',\r\n            };\r\n        }\r\n        tempusDominus.DefaultOptions.display.buttons = {\r\n            today: false,\r\n            clear: true,\r\n            close: true\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a new calendar picker and adds it to the {element} as '_tempusDominus'.\r\n     * If the element's value is not valid, the value is removed.\r\n     * @param {HTMLElement} element\r\n     * @param {string} format - Optional: The input format either as TempusDominus constant (e.g.: \"L\") or custom format (e.g.: \"yyyy-MM-dd\")\r\n     */\r\n    CreateCalendarPicker(element, format) \r\n    {\r\n        if (format === undefined) {\r\n            format = 'L';\r\n        }\r\n\r\n        try {\r\n            try {\r\n                // Destroy any existing widget\r\n                if (element._tempusDominus) element._tempusDominus.dispose();\r\n            }\r\n            catch {}\r\n            \r\n            element._tempusDominus = this._tryCreateCalendarPicker(element, format);\r\n        } catch {\r\n            element.querySelector('input').value = '';\r\n            element._tempusDominus = this._tryCreateCalendarPicker(element, format);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new time picker and adds it to the {element} as '_tempusDominus'.\r\n     * If the element's value is not valid, the value is removed.\r\n     * @param {HTMLElement} element\r\n     * @param {string} format - Optional: The input format either as TempusDominus constant (e.g.: \"LT\") or custom format (e.g.: \"h:mm\")\r\n     */\r\n    CreateTimePicker(element, format) \r\n    {\r\n        if (format === undefined) {\r\n            format = 'LT';\r\n        }\r\n\r\n        try {\r\n            try {\r\n                // Destroy any existing widget\r\n                if (element._tempusDominus) element._tempusDominus.dispose();\r\n            }\r\n            catch {}\r\n            \r\n            element._tempusDominus = this._tryCreateTimePicker(element, format);\r\n        } catch {\r\n            element.querySelector('input').value = '';\r\n            element._tempusDominus = this._tryCreateTimePicker(element, format);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Lets the 'Escape' key close the specified picker {elements}\r\n     * @param {Array.<HTMLElement>} elements\r\n     */\r\n    SetEscapeKeyClosesPicker(elements) \r\n    {\r\n        document.addEventListener('keydown', function (event) {\r\n            if (event.key !== 'Escape') return;\r\n            [].forEach.call(elements, function (el) {\r\n                const td = el._tempusDominus;\r\n                if (td) {\r\n                    td.hide();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Tries to create a new calendar picker.\r\n     * Creation will throw for invalid values.\r\n     * @param {HTMLElement} element\r\n     * @param {string} format - The input format either as TempusDominus constant (e.g.: \"L\") or custom format (e.g.: \"yyyy-MM-dd\")\r\n     * @returns {tempusDominus.TempusDominus}\r\n     */\r\n    _tryCreateCalendarPicker(element, format)\r\n    {\r\n        const calPicker = new tempusDominus.TempusDominus(element, {\r\n            container: element,\r\n            allowInputToggle: false,\r\n            localization: {\r\n                format: format\r\n            },\r\n            display: {\r\n                viewMode: 'calendar',\r\n                components: {\r\n                    clock: false\r\n                },\r\n            },\r\n            restrictions: {\r\n            }\r\n        });\r\n\r\n        this._fixUncaughtExceptions(calPicker);\r\n        return calPicker;\r\n    }\r\n\r\n    /**\r\n     * Tries to create a new time picker.\r\n     * Creation will throw for invalid values.\r\n     * @param {HTMLElement} element\r\n     * @param {string} format - Optional: The input format either as TempusDominus constant (e.g.: \"LT\") or custom format (e.g.: \"h:mm\")\r\n     * @returns {tempusDominus.TempusDominus}\r\n     */\r\n    _tryCreateTimePicker(element, format)\r\n    {\r\n        const timePicker = new tempusDominus.TempusDominus(element, {\r\n            container: element,\r\n            allowInputToggle: false,\r\n            stepping: 15,\r\n            localization: {\r\n                format: format\r\n            },\r\n            display: {\r\n                viewMode: 'clock',\r\n                components: {\r\n                    decades: false,\r\n                    year: false,\r\n                    month: false,\r\n                    date: false,\r\n                    hours: true,\r\n                    minutes: true,\r\n                    seconds: false\r\n                },\r\n                buttons: {\r\n                    today: false,\r\n                    clear: true,\r\n                    close: true\r\n                }\r\n            }\r\n        });\r\n\r\n        this._fixUncaughtExceptions(timePicker);\r\n        this._fixMeridiemButtonType(element);\r\n        return timePicker;\r\n    }\r\n\r\n\r\n    /**\r\n    * TempusDominus v6.7.7 throws when invalid dates/times\r\n    * are entered. This workaround catches the exception by\r\n    * overriding the default 'parseInput' method.\r\n    * See: https://github.com/Eonasdan/tempus-dominus/discussions/2656#discussioncomment-5713755\r\n    * @param {tempusDominus.TempusDominus} widget - The widget instance to be fixed.\r\n    */\r\n    _fixUncaughtExceptions (widget) \r\n    {\r\n        widget.dates.origParseInput = widget.dates.parseInput;\r\n        widget.dates.parseInput = (input) => {\r\n            try {\r\n                return widget.dates.origParseInput(input);\r\n            }\r\n            catch (err) {\r\n                widget.dates.clear();\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n    * TempusDominus v6.7.7 does not set the 'type=button' attribute\r\n    * for the \"toggle meridiem button\" of the time picker.\r\n    * Without this type, clicking the button submits the form where the button is located.\r\n    * See: https://github.com/Eonasdan/tempus-dominus/issues/2820\r\n    * @param {HTMLElement} element - The element used to create the TempusDominus instance.\r\n    */\r\n    _fixMeridiemButtonType(element) \r\n    {\r\n        element.addEventListener('show.td', function () {\r\n            const container = this._tempusDominus.optionsStore.options.container;\r\n            const btn = container.querySelector('button[data-action=\"toggleMeridiem\"]')\r\n            if (btn) btn.setAttribute('type', 'button');\r\n        });\r\n    }\r\n}\r\n"],"names":["Site","undefined","TempusDominusFactory","use strict","constructor","locale","fallbackLocale","hourCycle","useBiIcons","this","tdLocale","tempusDominus","locales","tdHourCycle","_setTdDefaults","DefaultOptions","localization","dayViewHeaderFormat","month","year","display","icons","time","date","up","down","previous","next","today","clear","close","buttons","CreateCalendarPicker","element","format","_tempusDominus","dispose","_tryCreateCalendarPicker","querySelector","value","CreateTimePicker","_tryCreateTimePicker","SetEscapeKeyClosesPicker","elements","document","addEventListener","event","key","forEach","call","el","td","hide","calPicker","TempusDominus","container","allowInputToggle","viewMode","components","clock","restrictions","_fixUncaughtExceptions","timePicker","stepping","decades","hours","minutes","seconds","_fixMeridiemButtonType","widget","dates","origParseInput","parseInput","input","err","btn","optionsStore","options","setAttribute"],"mappings":"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"}