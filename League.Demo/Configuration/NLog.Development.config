<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="logs\internal-nlog.log">

    <extensions>
      <!-- Make these renderers available: https://nlog-project.org/config/?tab=layout-renderers&search=package:nlog.web.aspnetcore -->
      <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

	<variable name="consoleLayout"
	          value="${time:format=HH\\:mm\\:ss.fff}|${level:uppercase=true:padding=5}|
${logger:shortName=true}|${message}${onexception:inner=${exception:format=ToString}}" />

    <!-- the targets to write to -->
    <targets async="true">
      <!-- write logs to file ** ${var:logDirectory} is set in Program.Main() -->
      <target xsi:type="File" name="allfile" fileName="${var:logDirectory}logs\nlog-all-${shortdate}.log" keepFileOpen="true" concurrentWrites="true"
              layout="${aspnet-request:header=JSNLog-RequestId:whenEmpty=${aspnet-TraceIdentifier}} ${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=ToString,StackTrace}" />

      <!-- "not found" file log, only own logs. -->
      <target xsi:type="File" name="notFoundFile-web" fileName="${var:logDirectory}logs\nlog-not-found-${shortdate}.log" keepFileOpen="true" concurrentWrites="true"
              layout="${aspnet-request:header=JSNLog-RequestId:whenEmpty=${aspnet-TraceIdentifier}} ${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message}" />

      <!-- another file log, only own logs. -->
      <target xsi:type="File" name="ownFile-web" fileName="${var:logDirectory}logs\nlog-own-${shortdate}.log" keepFileOpen="true" concurrentWrites="true"
              layout="${aspnet-request:header=JSNLog-RequestId:whenEmpty=${aspnet-TraceIdentifier}} ${longdate}|${event-properties:item=EventId.Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=ToString,StackTrace:maxInnerExceptionLevel=5:innerFormat=shortType,message,method}${newline}   |url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

	  <!-- the console logging -->	
	  <target xsi:type="Console" name="console" layout="${consoleLayout}" />
		
      <!-- write to void i.e. just remove -->
      <target xsi:type="Null" name="nowhere" />
    </targets>

    <!-- rules to map from logger name to target -->
    <rules>
        <!-- All logs, including from Microsoft -->
        <logger name="*" minlevel="Info" writeTo="allfile" />

        <!--Skip non-critical Microsoft logs and so log only own logs-->
        <logger name="Microsoft.*" maxlevel="Info" writeTo="nowhere" final="true" />
		
        <!-- Other log content -->
        <logger name="TournamentManager.*" minlevel="Debug" writeTo="ownFile-web,console" final="true" />
        <logger name="League.NotFound" minlevel="Info" writeTo="notFoundFile-web,console" final="true" />
        <logger name="League.*" minlevel="Debug" writeTo="ownFile-web,console" final="true" />
        <logger name="Axuno.*" minlevel="Debug" writeTo="ownFile-web,console" final="true" />
        <logger name="*" minlevel="Info" writeTo="ownFile-web,console" />
    </rules>
</nlog>