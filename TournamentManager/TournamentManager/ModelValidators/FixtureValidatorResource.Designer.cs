//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TournamentManager.ModelValidators {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FixtureValidatorResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FixtureValidatorResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TournamentManager.ModelValidators.FixtureValidatorResource", typeof(FixtureValidatorResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match date is in the past.
        /// </summary>
        internal static string PlannedStartIsFutureDate {
            get {
                return ResourceManager.GetString("PlannedStartIsFutureDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match date and time must be set.
        /// </summary>
        internal static string PlannedStartIsSet {
            get {
                return ResourceManager.GetString("PlannedStartIsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is excluded for matches (&apos;{1}&apos;).
        /// </summary>
        internal static string PlannedStartNotExcluded {
            get {
                return ResourceManager.GetString("PlannedStartNotExcluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Team &apos;{0}&apos; have a fixture at this time.
        /// </summary>
        internal static string PlannedStartTeamsAreNotBusy {
            get {
                return ResourceManager.GetString("PlannedStartTeamsAreNotBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not the registered home match weekday of &apos;{1}&apos;.
        /// </summary>
        internal static string PlannedStartWeekdayIsTeamWeekday {
            get {
                return ResourceManager.GetString("PlannedStartWeekdayIsTeamWeekday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match time is outside the range from {0} to {1}.
        /// </summary>
        internal static string PlannedStartWithinDesiredTimeRange {
            get {
                return ResourceManager.GetString("PlannedStartWithinDesiredTimeRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match date in {0} must be within {1}.
        /// </summary>
        internal static string PlannedStartWithinRoundLegs {
            get {
                return ResourceManager.GetString("PlannedStartWithinRoundLegs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected venue is not registered by one of the teams.
        /// </summary>
        internal static string PlannedVenueIsRegisteredVenueOfTeam {
            get {
                return ResourceManager.GetString("PlannedVenueIsRegisteredVenueOfTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Venue must be set to an item from the list.
        /// </summary>
        internal static string PlannedVenueIsSet {
            get {
                return ResourceManager.GetString("PlannedVenueIsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At this time, the venue is in use by another match ({0} : {1}).
        /// </summary>
        internal static string PlannedVenueNotOccupiedWithOtherMatch {
            get {
                return ResourceManager.GetString("PlannedVenueNotOccupiedWithOtherMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave venue open or select one from the list.
        /// </summary>
        internal static string PlannedVenueNullOrSet {
            get {
                return ResourceManager.GetString("PlannedVenueNullOrSet", resourceCulture);
            }
        }
    }
}
