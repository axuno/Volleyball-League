<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Product>Tournament Manager</Product>
    <TargetFramework>net8.0</TargetFramework>
    <NeutralLanguage>en</NeutralLanguage>
    <!-- With dotnet, add parameter: -p:SatelliteResourceLanguages="""en;de""" -->
    <SatelliteResourceLanguages>en;de</SatelliteResourceLanguages>
    <Version>6.2.0</Version>
    <FileVersion>6.2.0</FileVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591;NETSDK1206</NoWarn>
    <Description>TournamentManager is the backend for Volleyball League.
Volleyball League is an open source sports platform that brings everything necessary to organize and to run a league.
        </Description>
    <!-- With dotnet, add parameter: -p:SatelliteResourceLanguages="""en;de""" -->
    <SatelliteResourceLanguages>en;de</SatelliteResourceLanguages>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="EPPlus" Version="8.0.5" />
    <PackageReference Include="Microsoft.Data.SqlClient" Version="5.2.2" />
    <PackageReference Include="NLog" Version="5.3.4" />
    <PackageReference Include="NuGetizer" Version="1.2.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="OxyPlot.Core" Version="2.2.0" />
    <PackageReference Include="OxyPlot.SkiaSharp" Version="2.2.0" />
    <PackageReference Include="PuppeteerSharp" Version="20.0.5" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.7.0" />
    <!-- Replace original Ical.Net v4.2.0 with more up-to-date fork -->
    <PackageReference Include="Ical.Net" Version="4.3.1" />
    <PackageReference Include="libphonenumber-csharp" Version="8.13.52" />
    <PackageReference Include="NLog.Extensions.Logging" Version="5.3.15" />
    <PackageReference Include="System.Data.SqlClient" Version="4.9.0" />
    <PackageReference Include="YAXLib" Version="4.3.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Axuno.Tools\Axuno.Tools.csproj" />
    <ProjectReference Include="..\DAL\DatabaseGeneric\TournamentManager.DAL.DbGeneric.csproj" />
    <ProjectReference Include="..\DAL\DatabaseSpecific\TournamentManager.DAL.DBSpecific.csproj" />
  </ItemGroup>
  <!-- Custom PropertyGroup to add the Environment name during publish. The EnvironmentName property is used for the 'Environment' variable in web.config when publishing. -->
  <PropertyGroup Condition=" '$(Configuration)' == '' Or '$(Configuration)' == 'Debug'">
    <EnvironmentName>Development</EnvironmentName>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' != '' AND '$(Configuration)' != 'Debug' ">
    <EnvironmentName>Production</EnvironmentName>
  </PropertyGroup>
  <ItemGroup>
    <Compile Update="ModelValidators\FixtureValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>FixtureValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="EntityValidators\UserEntityValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>UserEntityValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\MatchResultPermissionValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MatchResultPermissionValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\MatchResultValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>MatchResultValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\PhoneNumberValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>PhoneNumberValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\SetsValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SetsValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\SingleSetValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SingleSetValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\TeamInRoundValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TeamInRoundValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\TeamValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TeamValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\TeamVenueValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>TeamVenueValidatorResource.resx</DependentUpon>
    </Compile>
    <Compile Update="ModelValidators\VenueValidatorResource.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>VenueValidatorResource.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="ModelValidators\FixtureValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>FixtureValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="EntityValidators\UserEntityValidatorResource.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>UserEntityValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\MatchResultPermissionValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>MatchResultPermissionValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\MatchResultValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>MatchResultValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\PhoneNumberValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>PhoneNumberValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\SetsValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>SetsValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\SingleSetValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>SingleSetValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\TeamInRoundValidatorResource.resx">
      <LastGenOutput>TeamInRoundValidatorResource.Designer.cs</LastGenOutput>
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\TeamVenueValidatorResource.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>TeamVenueValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\VenueValidatorResource.resx">
      <LastGenOutput>VenueValidatorResource.Designer.cs</LastGenOutput>
      <Generator>PublicResXFileCodeGenerator</Generator>
    </EmbeddedResource>
    <EmbeddedResource Update="ModelValidators\TeamValidatorResource.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>TeamValidatorResource.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Tests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Play</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <!-- Required for Moq -->
      <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
</Project>