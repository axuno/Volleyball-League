//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.7.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace TournamentManager.DAL.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	internal static class PersistenceInfoProviderSingleton
	{
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton() {	}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance() { return _providerInstance; }
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitAvailableMatchDateEntityMappings();
			InitExcludeMatchDateEntityMappings();
			InitIdentityRoleEntityMappings();
			InitIdentityRoleClaimEntityMappings();
			InitIdentityUserClaimEntityMappings();
			InitIdentityUserLoginEntityMappings();
			InitIdentityUserRoleEntityMappings();
			InitIdentityUserTokenEntityMappings();
			InitManagerOfTeamEntityMappings();
			InitMatchEntityMappings();
			InitMatchRuleEntityMappings();
			InitPlayerInTeamEntityMappings();
			InitRankingEntityMappings();
			InitRegistrationEntityMappings();
			InitRoundEntityMappings();
			InitRoundLegEntityMappings();
			InitRoundTypeEntityMappings();
			InitSetEntityMappings();
			InitSetRuleEntityMappings();
			InitTeamEntityMappings();
			InitTeamInRoundEntityMappings();
			InitTournamentEntityMappings();
			InitTournamentTypeEntityMappings();
			InitUserEntityMappings();
			InitVenueEntityMappings();
			InitCalendarTypedViewMappings();
			InitCompletedMatchTypedViewMappings();
			InitLatestTeamTournamentTypedViewMappings();
			InitMatchCompleteRawTypedViewMappings();
			InitMatchReportSheetTypedViewMappings();
			InitMatchToPlayRawTypedViewMappings();
			InitPlannedMatchTypedViewMappings();
			InitRankingListTypedViewMappings();
			InitRoundLegPeriodTypedViewMappings();
			InitRoundTeamTypedViewMappings();
			InitTeamUserRoundTypedViewMappings();
			InitTeamVenueRoundTypedViewMappings();
			InitVenueDistanceResultTypedViewMappings();
			InitVenueTeamTypedViewMappings();
		}

		/// <summary>Inits AvailableMatchDateEntity's mappings</summary>
		private void InitAvailableMatchDateEntityMappings()
		{
			this.AddElementMapping("AvailableMatchDateEntity", @"TestOrg", @"dbo", "AvailableMatchDate", 9, 0);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "MatchStartTime", "MatchStartTime", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "MatchEndTime", "MatchEndTime", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 5);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "IsGenerated", "IsGenerated", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 6);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 7);
			this.AddElementFieldMapping("AvailableMatchDateEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 8);
		}

		/// <summary>Inits ExcludeMatchDateEntity's mappings</summary>
		private void InitExcludeMatchDateEntityMappings()
		{
			this.AddElementMapping("ExcludeMatchDateEntity", @"TestOrg", @"dbo", "ExcludeMatchDate", 9, 0);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "RoundId", "RoundId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "TeamId", "TeamId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "DateFrom", "DateFrom", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "DateTo", "DateTo", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 5);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "Reason", "Reason", true, "NVarChar", 60, 0, 0, false, "", null, typeof(System.String), 6);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 7);
			this.AddElementFieldMapping("ExcludeMatchDateEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 8);
		}

		/// <summary>Inits IdentityRoleEntity's mappings</summary>
		private void InitIdentityRoleEntityMappings()
		{
			this.AddElementMapping("IdentityRoleEntity", @"TestOrg", @"dbo", "IdentityRole", 2, 0);
			this.AddElementFieldMapping("IdentityRoleEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("IdentityRoleEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits IdentityRoleClaimEntity's mappings</summary>
		private void InitIdentityRoleClaimEntityMappings()
		{
			this.AddElementMapping("IdentityRoleClaimEntity", @"TestOrg", @"dbo", "IdentityRoleClaim", 6, 0);
			this.AddElementFieldMapping("IdentityRoleClaimEntity", "ClaimType", "ClaimType", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("IdentityRoleClaimEntity", "ClaimValue", "ClaimValue", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("IdentityRoleClaimEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("IdentityRoleClaimEntity", "Issuer", "Issuer", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("IdentityRoleClaimEntity", "RoleId", "RoleId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("IdentityRoleClaimEntity", "ValueType", "ValueType", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 5);
		}

		/// <summary>Inits IdentityUserClaimEntity's mappings</summary>
		private void InitIdentityUserClaimEntityMappings()
		{
			this.AddElementMapping("IdentityUserClaimEntity", @"TestOrg", @"dbo", "IdentityUserClaim", 6, 0);
			this.AddElementFieldMapping("IdentityUserClaimEntity", "ClaimType", "ClaimType", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("IdentityUserClaimEntity", "ClaimValue", "ClaimValue", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("IdentityUserClaimEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("IdentityUserClaimEntity", "Issuer", "Issuer", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("IdentityUserClaimEntity", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("IdentityUserClaimEntity", "ValueType", "ValueType", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 5);
		}

		/// <summary>Inits IdentityUserLoginEntity's mappings</summary>
		private void InitIdentityUserLoginEntityMappings()
		{
			this.AddElementMapping("IdentityUserLoginEntity", @"TestOrg", @"dbo", "IdentityUserLogin", 5, 0);
			this.AddElementFieldMapping("IdentityUserLoginEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("IdentityUserLoginEntity", "LoginProvider", "LoginProvider", false, "NVarChar", 128, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("IdentityUserLoginEntity", "ProviderDisplayName", "ProviderDisplayName", false, "NVarChar", 128, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("IdentityUserLoginEntity", "ProviderKey", "ProviderKey", false, "NVarChar", 128, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("IdentityUserLoginEntity", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 4);
		}

		/// <summary>Inits IdentityUserRoleEntity's mappings</summary>
		private void InitIdentityUserRoleEntityMappings()
		{
			this.AddElementMapping("IdentityUserRoleEntity", @"TestOrg", @"dbo", "IdentityUserRole", 3, 0);
			this.AddElementFieldMapping("IdentityUserRoleEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("IdentityUserRoleEntity", "RoleId", "RoleId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("IdentityUserRoleEntity", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
		}

		/// <summary>Inits IdentityUserTokenEntity's mappings</summary>
		private void InitIdentityUserTokenEntityMappings()
		{
			this.AddElementMapping("IdentityUserTokenEntity", @"TestOrg", @"dbo", "IdentityUserToken", 5, 0);
			this.AddElementFieldMapping("IdentityUserTokenEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("IdentityUserTokenEntity", "LoginProvider", "LoginProvider", false, "NVarChar", 128, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("IdentityUserTokenEntity", "Name", "Name", false, "NVarChar", 128, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("IdentityUserTokenEntity", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("IdentityUserTokenEntity", "Value", "Value", true, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 4);
		}

		/// <summary>Inits ManagerOfTeamEntity's mappings</summary>
		private void InitManagerOfTeamEntityMappings()
		{
			this.AddElementMapping("ManagerOfTeamEntity", @"TestOrg", @"dbo", "ManagerOfTeam", 5, 0);
			this.AddElementFieldMapping("ManagerOfTeamEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("ManagerOfTeamEntity", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("ManagerOfTeamEntity", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("ManagerOfTeamEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("ManagerOfTeamEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
		}

		/// <summary>Inits MatchEntity's mappings</summary>
		private void InitMatchEntityMappings()
		{
			this.AddElementMapping("MatchEntity", @"TestOrg", @"dbo", "Match", 22, 0);
			this.AddElementFieldMapping("MatchEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("MatchEntity", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("MatchEntity", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("MatchEntity", "RefereeId", "RefereeId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("MatchEntity", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("MatchEntity", "VenueId", "VenueId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 5);
			this.AddElementFieldMapping("MatchEntity", "OrigVenueId", "OrigVenueId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 6);
			this.AddElementFieldMapping("MatchEntity", "LegSequenceNo", "LegSequenceNo", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("MatchEntity", "HomePoints", "HomePoints", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("MatchEntity", "GuestPoints", "GuestPoints", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("MatchEntity", "IsComplete", "IsComplete", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 10);
			this.AddElementFieldMapping("MatchEntity", "IsOverruled", "IsOverruled", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 11);
			this.AddElementFieldMapping("MatchEntity", "PlannedStart", "PlannedStart", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 12);
			this.AddElementFieldMapping("MatchEntity", "PlannedEnd", "PlannedEnd", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 13);
			this.AddElementFieldMapping("MatchEntity", "OrigPlannedStart", "OrigPlannedStart", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 14);
			this.AddElementFieldMapping("MatchEntity", "OrigPlannedEnd", "OrigPlannedEnd", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 15);
			this.AddElementFieldMapping("MatchEntity", "RealStart", "RealStart", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 16);
			this.AddElementFieldMapping("MatchEntity", "RealEnd", "RealEnd", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 17);
			this.AddElementFieldMapping("MatchEntity", "Remarks", "Remarks", true, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 18);
			this.AddElementFieldMapping("MatchEntity", "ChangeSerial", "ChangeSerial", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 19);
			this.AddElementFieldMapping("MatchEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 20);
			this.AddElementFieldMapping("MatchEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 21);
		}

		/// <summary>Inits MatchRuleEntity's mappings</summary>
		private void InitMatchRuleEntityMappings()
		{
			this.AddElementMapping("MatchRuleEntity", @"TestOrg", @"dbo", "MatchRule", 12, 0);
			this.AddElementFieldMapping("MatchRuleEntity", "BestOf", "BestOf", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 0);
			this.AddElementFieldMapping("MatchRuleEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 1);
			this.AddElementFieldMapping("MatchRuleEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("MatchRuleEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("MatchRuleEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("MatchRuleEntity", "NumOfSets", "NumOfSets", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("MatchRuleEntity", "PointsMatchLost", "PointsMatchLost", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("MatchRuleEntity", "PointsMatchLostAfterTieBreak", "PointsMatchLostAfterTieBreak", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("MatchRuleEntity", "PointsMatchTie", "PointsMatchTie", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("MatchRuleEntity", "PointsMatchWon", "PointsMatchWon", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("MatchRuleEntity", "PointsMatchWonAfterTieBreak", "PointsMatchWonAfterTieBreak", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("MatchRuleEntity", "RankComparer", "RankComparer", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 11);
		}

		/// <summary>Inits PlayerInTeamEntity's mappings</summary>
		private void InitPlayerInTeamEntityMappings()
		{
			this.AddElementMapping("PlayerInTeamEntity", @"TestOrg", @"dbo", "PlayerInTeam", 5, 0);
			this.AddElementFieldMapping("PlayerInTeamEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("PlayerInTeamEntity", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("PlayerInTeamEntity", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("PlayerInTeamEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("PlayerInTeamEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
		}

		/// <summary>Inits RankingEntity's mappings</summary>
		private void InitRankingEntityMappings()
		{
			this.AddElementMapping("RankingEntity", @"TestOrg", @"dbo", "Ranking", 16, 0);
			this.AddElementFieldMapping("RankingEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RankingEntity", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("RankingEntity", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("RankingEntity", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("RankingEntity", "ValuationDate", "ValuationDate", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("RankingEntity", "Rank", "Rank", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("RankingEntity", "MatchPointsWon", "MatchPointsWon", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("RankingEntity", "MatchPointsLost", "MatchPointsLost", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("RankingEntity", "SetPointsWon", "SetPointsWon", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("RankingEntity", "SetPointsLost", "SetPointsLost", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("RankingEntity", "BallPointsWon", "BallPointsWon", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("RankingEntity", "BallPointsLost", "BallPointsLost", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 11);
			this.AddElementFieldMapping("RankingEntity", "MatchesPlayed", "MatchesPlayed", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 12);
			this.AddElementFieldMapping("RankingEntity", "MatchesToPlay", "MatchesToPlay", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 13);
			this.AddElementFieldMapping("RankingEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 14);
			this.AddElementFieldMapping("RankingEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 15);
		}

		/// <summary>Inits RegistrationEntity's mappings</summary>
		private void InitRegistrationEntityMappings()
		{
			this.AddElementMapping("RegistrationEntity", @"TestOrg", @"dbo", "Registration", 7, 0);
			this.AddElementFieldMapping("RegistrationEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RegistrationEntity", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("RegistrationEntity", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("RegistrationEntity", "ManagerId", "ManagerId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("RegistrationEntity", "Guid", "Guid", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("RegistrationEntity", "AppliedWithMessage", "AppliedWithMessage", true, "NVarChar", 4000, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("RegistrationEntity", "AppliedOn", "AppliedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 6);
		}

		/// <summary>Inits RoundEntity's mappings</summary>
		private void InitRoundEntityMappings()
		{
			this.AddElementMapping("RoundEntity", @"TestOrg", @"dbo", "Round", 12, 0);
			this.AddElementFieldMapping("RoundEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RoundEntity", "TournamentId", "TournamentId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("RoundEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("RoundEntity", "Description", "Description", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("RoundEntity", "TypeId", "TypeId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("RoundEntity", "NumOfLegs", "NumOfLegs", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("RoundEntity", "MatchRuleId", "MatchRuleId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 6);
			this.AddElementFieldMapping("RoundEntity", "SetRuleId", "SetRuleId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 7);
			this.AddElementFieldMapping("RoundEntity", "IsComplete", "IsComplete", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 8);
			this.AddElementFieldMapping("RoundEntity", "NextRoundId", "NextRoundId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 9);
			this.AddElementFieldMapping("RoundEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 10);
			this.AddElementFieldMapping("RoundEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 11);
		}

		/// <summary>Inits RoundLegEntity's mappings</summary>
		private void InitRoundLegEntityMappings()
		{
			this.AddElementMapping("RoundLegEntity", @"TestOrg", @"dbo", "RoundLeg", 8, 0);
			this.AddElementFieldMapping("RoundLegEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RoundLegEntity", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("RoundLegEntity", "SequenceNo", "SequenceNo", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("RoundLegEntity", "Description", "Description", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("RoundLegEntity", "StartDateTime", "StartDateTime", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("RoundLegEntity", "EndDateTime", "EndDateTime", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 5);
			this.AddElementFieldMapping("RoundLegEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 6);
			this.AddElementFieldMapping("RoundLegEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 7);
		}

		/// <summary>Inits RoundTypeEntity's mappings</summary>
		private void InitRoundTypeEntityMappings()
		{
			this.AddElementMapping("RoundTypeEntity", @"TestOrg", @"dbo", "RoundType", 5, 0);
			this.AddElementFieldMapping("RoundTypeEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RoundTypeEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("RoundTypeEntity", "Description", "Description", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("RoundTypeEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("RoundTypeEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
		}

		/// <summary>Inits SetEntity's mappings</summary>
		private void InitSetEntityMappings()
		{
			this.AddElementMapping("SetEntity", @"TestOrg", @"dbo", "Set", 16, 0);
			this.AddElementFieldMapping("SetEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("SetEntity", "MatchId", "MatchId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("SetEntity", "SequenceNo", "SequenceNo", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("SetEntity", "HomeBallPoints", "HomeBallPoints", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("SetEntity", "GuestBallPoints", "GuestBallPoints", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("SetEntity", "HomeSetPoints", "HomeSetPoints", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("SetEntity", "GuestSetPoints", "GuestSetPoints", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("SetEntity", "HomeTimeout", "HomeTimeout", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("SetEntity", "GuestTimeout", "GuestTimeout", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("SetEntity", "IsOverruled", "IsOverruled", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 9);
			this.AddElementFieldMapping("SetEntity", "IsTieBreak", "IsTieBreak", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 10);
			this.AddElementFieldMapping("SetEntity", "RealStart", "RealStart", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 11);
			this.AddElementFieldMapping("SetEntity", "RealEnd", "RealEnd", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 12);
			this.AddElementFieldMapping("SetEntity", "Remarks", "Remarks", true, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 13);
			this.AddElementFieldMapping("SetEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 14);
			this.AddElementFieldMapping("SetEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 15);
		}

		/// <summary>Inits SetRuleEntity's mappings</summary>
		private void InitSetRuleEntityMappings()
		{
			this.AddElementMapping("SetRuleEntity", @"TestOrg", @"dbo", "SetRule", 13, 0);
			this.AddElementFieldMapping("SetRuleEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 0);
			this.AddElementFieldMapping("SetRuleEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("SetRuleEntity", "MaxSubstitutions", "MaxSubstitutions", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("SetRuleEntity", "MaxTimeouts", "MaxTimeouts", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("SetRuleEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("SetRuleEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("SetRuleEntity", "NumOfPointsToWinRegular", "NumOfPointsToWinRegular", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("SetRuleEntity", "NumOfPointsToWinTiebreak", "NumOfPointsToWinTiebreak", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("SetRuleEntity", "PointsDiffToWinRegular", "PointsDiffToWinRegular", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("SetRuleEntity", "PointsDiffToWinTiebreak", "PointsDiffToWinTiebreak", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("SetRuleEntity", "PointsSetLost", "PointsSetLost", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("SetRuleEntity", "PointsSetTie", "PointsSetTie", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 11);
			this.AddElementFieldMapping("SetRuleEntity", "PointsSetWon", "PointsSetWon", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 12);
		}

		/// <summary>Inits TeamEntity's mappings</summary>
		private void InitTeamEntityMappings()
		{
			this.AddElementMapping("TeamEntity", @"TestOrg", @"dbo", "Team", 8, 0);
			this.AddElementFieldMapping("TeamEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TeamEntity", "VenueId", "VenueId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("TeamEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("TeamEntity", "MatchDayOfWeek", "MatchDayOfWeek", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("TeamEntity", "MatchTime", "MatchTime", true, "Time", 0, 0, 0, false, "", null, typeof(System.TimeSpan), 4);
			this.AddElementFieldMapping("TeamEntity", "ClubName", "ClubName", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("TeamEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 6);
			this.AddElementFieldMapping("TeamEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 7);
		}

		/// <summary>Inits TeamInRoundEntity's mappings</summary>
		private void InitTeamInRoundEntityMappings()
		{
			this.AddElementMapping("TeamInRoundEntity", @"TestOrg", @"dbo", "TeamInRound", 6, 0);
			this.AddElementFieldMapping("TeamInRoundEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TeamInRoundEntity", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("TeamInRoundEntity", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("TeamInRoundEntity", "TeamNameForRound", "TeamNameForRound", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("TeamInRoundEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("TeamInRoundEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 5);
		}

		/// <summary>Inits TournamentEntity's mappings</summary>
		private void InitTournamentEntityMappings()
		{
			this.AddElementMapping("TournamentEntity", @"TestOrg", @"dbo", "Tournament", 9, 0);
			this.AddElementFieldMapping("TournamentEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TournamentEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("TournamentEntity", "Description", "Description", true, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("TournamentEntity", "TypeId", "TypeId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("TournamentEntity", "IsComplete", "IsComplete", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("TournamentEntity", "IsPlanningMode", "IsPlanningMode", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
			this.AddElementFieldMapping("TournamentEntity", "NextTournamentId", "NextTournamentId", true, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 6);
			this.AddElementFieldMapping("TournamentEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 7);
			this.AddElementFieldMapping("TournamentEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 8);
		}

		/// <summary>Inits TournamentTypeEntity's mappings</summary>
		private void InitTournamentTypeEntityMappings()
		{
			this.AddElementMapping("TournamentTypeEntity", @"TestOrg", @"dbo", "TournamentType", 5, 0);
			this.AddElementFieldMapping("TournamentTypeEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TournamentTypeEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("TournamentTypeEntity", "Description", "Description", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("TournamentTypeEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 3);
			this.AddElementFieldMapping("TournamentTypeEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 4);
		}

		/// <summary>Inits UserEntity's mappings</summary>
		private void InitUserEntityMappings()
		{
			this.AddElementMapping("UserEntity", @"TestOrg", @"dbo", "User", 23, 0);
			this.AddElementFieldMapping("UserEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("UserEntity", "Guid", "Guid", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("UserEntity", "UserName", "UserName", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("UserEntity", "PasswordHash", "PasswordHash", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("UserEntity", "Email", "Email", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("UserEntity", "EmailConfirmedOn", "EmailConfirmedOn", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 5);
			this.AddElementFieldMapping("UserEntity", "PhoneNumber", "PhoneNumber", false, "NVarChar", 40, 0, 0, false, "", null, typeof(System.String), 6);
			this.AddElementFieldMapping("UserEntity", "PhoneNumberConfirmedOn", "PhoneNumberConfirmedOn", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 7);
			this.AddElementFieldMapping("UserEntity", "LastLoginOn", "LastLoginOn", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 8);
			this.AddElementFieldMapping("UserEntity", "AccessFailedCount", "AccessFailedCount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("UserEntity", "LockoutEndDateUtc", "LockoutEndDateUtc", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 10);
			this.AddElementFieldMapping("UserEntity", "Gender", "Gender", false, "NVarChar", 1, 0, 0, false, "", null, typeof(System.String), 11);
			this.AddElementFieldMapping("UserEntity", "Title", "Title", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 12);
			this.AddElementFieldMapping("UserEntity", "FirstName", "FirstName", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 13);
			this.AddElementFieldMapping("UserEntity", "MiddleName", "MiddleName", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 14);
			this.AddElementFieldMapping("UserEntity", "LastName", "LastName", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 15);
			this.AddElementFieldMapping("UserEntity", "Nickname", "Nickname", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 16);
			this.AddElementFieldMapping("UserEntity", "PhoneNumber2", "PhoneNumber2", false, "NVarChar", 40, 0, 0, false, "", null, typeof(System.String), 17);
			this.AddElementFieldMapping("UserEntity", "Email2", "Email2", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 18);
			this.AddElementFieldMapping("UserEntity", "Birthday", "Birthday", true, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 19);
			this.AddElementFieldMapping("UserEntity", "Remarks", "Remarks", true, "NVarChar", 4000, 0, 0, false, "", null, typeof(System.String), 20);
			this.AddElementFieldMapping("UserEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 21);
			this.AddElementFieldMapping("UserEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 22);
		}

		/// <summary>Inits VenueEntity's mappings</summary>
		private void InitVenueEntityMappings()
		{
			this.AddElementMapping("VenueEntity", @"TestOrg", @"dbo", "Venue", 12, 0);
			this.AddElementFieldMapping("VenueEntity", "Id", "Id", false, "BigInt", 0, 19, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("VenueEntity", "Name", "Name", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("VenueEntity", "Extension", "Extension", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("VenueEntity", "Street", "Street", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("VenueEntity", "PostalCode", "PostalCode", false, "NVarChar", 10, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("VenueEntity", "City", "City", false, "NVarChar", 255, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("VenueEntity", "Longitude", "Longitude", true, "Float", 0, 38, 0, false, "", null, typeof(System.Double), 6);
			this.AddElementFieldMapping("VenueEntity", "Latitude", "Latitude", true, "Float", 0, 38, 0, false, "", null, typeof(System.Double), 7);
			this.AddElementFieldMapping("VenueEntity", "Direction", "Direction", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 8);
			this.AddElementFieldMapping("VenueEntity", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 9);
			this.AddElementFieldMapping("VenueEntity", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, "", null, typeof(System.DateTime), 10);
			this.AddElementFieldMapping("VenueEntity", "PrecisePosition", "PrecisePosition", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 11);
		}


		/// <summary>Inits CalendarView's mappings</summary>
		private void InitCalendarTypedViewMappings()
		{
			this.AddElementMapping("CalendarTypedView", @"TestOrg", @"dbo", "Calendar", 25);
			this.AddElementFieldMapping("CalendarTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("CalendarTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("CalendarTypedView", "TournamentName", "TournamentName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("CalendarTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("CalendarTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("CalendarTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("CalendarTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("CalendarTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 7);
			this.AddElementFieldMapping("CalendarTypedView", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 8);
			this.AddElementFieldMapping("CalendarTypedView", "HomeTeamNameForRound", "HomeTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("CalendarTypedView", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 10);
			this.AddElementFieldMapping("CalendarTypedView", "GuestTeamNameForRound", "GuestTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("CalendarTypedView", "PlannedStart", "PlannedStart", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 12);
			this.AddElementFieldMapping("CalendarTypedView", "PlannedEnd", "PlannedEnd", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 13);
			this.AddElementFieldMapping("CalendarTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 14);
			this.AddElementFieldMapping("CalendarTypedView", "VenueName", "VenueName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 15);
			this.AddElementFieldMapping("CalendarTypedView", "VenueExtension", "VenueExtension", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 16);
			this.AddElementFieldMapping("CalendarTypedView", "VenueStreet", "VenueStreet", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 17);
			this.AddElementFieldMapping("CalendarTypedView", "VenuePostalCode", "VenuePostalCode", false, "NVarChar", 10, 0, 0, false, string.Empty, null, typeof(System.String), 18);
			this.AddElementFieldMapping("CalendarTypedView", "VenueCity", "VenueCity", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 19);
			this.AddElementFieldMapping("CalendarTypedView", "VenueLongitude", "VenueLongitude", false, "Float", 0, 38, 0, false, string.Empty, null, typeof(System.Double), 20);
			this.AddElementFieldMapping("CalendarTypedView", "VenueLatitude", "VenueLatitude", false, "Float", 0, 38, 0, false, string.Empty, null, typeof(System.Double), 21);
			this.AddElementFieldMapping("CalendarTypedView", "VenueDirection", "VenueDirection", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 22);
			this.AddElementFieldMapping("CalendarTypedView", "ChangeSerial", "ChangeSerial", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 23);
			this.AddElementFieldMapping("CalendarTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 24);
		}

		/// <summary>Inits CompletedMatchView's mappings</summary>
		private void InitCompletedMatchTypedViewMappings()
		{
			this.AddElementMapping("CompletedMatchTypedView", @"TestOrg", @"dbo", "CompletedMatch", 26);
			this.AddElementFieldMapping("CompletedMatchTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("CompletedMatchTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("CompletedMatchTypedView", "TournamentName", "TournamentName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 7);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundLegSequenceNo", "RoundLegSequenceNo", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("CompletedMatchTypedView", "RoundLegDescription", "RoundLegDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("CompletedMatchTypedView", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 10);
			this.AddElementFieldMapping("CompletedMatchTypedView", "HomeTeamNameForRound", "HomeTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("CompletedMatchTypedView", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 12);
			this.AddElementFieldMapping("CompletedMatchTypedView", "GuestTeamNameForRound", "GuestTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 13);
			this.AddElementFieldMapping("CompletedMatchTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 14);
			this.AddElementFieldMapping("CompletedMatchTypedView", "MatchDate", "MatchDate", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 15);
			this.AddElementFieldMapping("CompletedMatchTypedView", "HomeMatchPoints", "HomeMatchPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 16);
			this.AddElementFieldMapping("CompletedMatchTypedView", "GuestMatchPoints", "GuestMatchPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 17);
			this.AddElementFieldMapping("CompletedMatchTypedView", "HomeSetPoints", "HomeSetPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 18);
			this.AddElementFieldMapping("CompletedMatchTypedView", "GuestSetPoints", "GuestSetPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 19);
			this.AddElementFieldMapping("CompletedMatchTypedView", "HomeBallPoints", "HomeBallPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 20);
			this.AddElementFieldMapping("CompletedMatchTypedView", "GuestBallPoints", "GuestBallPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 21);
			this.AddElementFieldMapping("CompletedMatchTypedView", "SetResults", "SetResults", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 22);
			this.AddElementFieldMapping("CompletedMatchTypedView", "IsOverruled", "IsOverruled", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 23);
			this.AddElementFieldMapping("CompletedMatchTypedView", "Remarks", "Remarks", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 24);
			this.AddElementFieldMapping("CompletedMatchTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 25);
		}

		/// <summary>Inits LatestTeamTournamentView's mappings</summary>
		private void InitLatestTeamTournamentTypedViewMappings()
		{
			this.AddElementMapping("LatestTeamTournamentTypedView", @"TestOrg", @"dbo", "LatestTeamTournament", 14);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TournamentName", "TournamentName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TournamentDescription", "TournamentDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 7);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 8);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TeamName", "TeamName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TeamNameForRound", "TeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 10);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TeamClubName", "TeamClubName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TeamMatchDayOfWeek", "TeamMatchDayOfWeek", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 12);
			this.AddElementFieldMapping("LatestTeamTournamentTypedView", "TeamMatchTime", "TeamMatchTime", false, "Time", 0, 0, 0, false, string.Empty, null, typeof(System.TimeSpan), 13);
		}

		/// <summary>Inits MatchCompleteRawView's mappings</summary>
		private void InitMatchCompleteRawTypedViewMappings()
		{
			this.AddElementMapping("MatchCompleteRawTypedView", @"TestOrg", @"dbo", "MatchCompleteRaw", 15);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 5);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "MatchDate", "MatchDate", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 6);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "HomeMatchPoints", "HomeMatchPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "GuestMatchPoints", "GuestMatchPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "HomeSetPoints", "HomeSetPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "GuestSetPoints", "GuestSetPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "HomeBallPoints", "HomeBallPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 11);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "GuestBallPoints", "GuestBallPoints", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 12);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "IsOverruled", "IsOverruled", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 13);
			this.AddElementFieldMapping("MatchCompleteRawTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 14);
		}

		/// <summary>Inits MatchReportSheetView's mappings</summary>
		private void InitMatchReportSheetTypedViewMappings()
		{
			this.AddElementMapping("MatchReportSheetTypedView", @"TestOrg", @"dbo", "MatchReportSheet", 24);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "TournamentName", "TournamentName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 3);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "RoundLegSequenceNo", "RoundLegSequenceNo", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "RoundLegDescription", "RoundLegDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 8);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 9);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "HomeTeamNameForRound", "HomeTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 10);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 11);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "GuestTeamNameForRound", "GuestTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 12);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "PlannedStart", "PlannedStart", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 13);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "OrigPlannedStart", "OrigPlannedStart", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 14);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "NumOfSets", "NumOfSets", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 15);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "BestOf", "BestOf", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 16);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "NumOfPointsToWinRegular", "NumOfPointsToWinRegular", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 17);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "NumOfPointsToWinTieBreak", "NumOfPointsToWinTieBreak", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 18);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "MaxTimeouts", "MaxTimeouts", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 19);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "MaxSubstitutions", "MaxSubstitutions", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 20);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "ChangeSerial", "ChangeSerial", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 21);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "Remarks", "Remarks", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 22);
			this.AddElementFieldMapping("MatchReportSheetTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 23);
		}

		/// <summary>Inits MatchToPlayRawView's mappings</summary>
		private void InitMatchToPlayRawTypedViewMappings()
		{
			this.AddElementMapping("MatchToPlayRawTypedView", @"TestOrg", @"dbo", "MatchToPlayRaw", 8);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 5);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "MatchDate", "MatchDate", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 6);
			this.AddElementFieldMapping("MatchToPlayRawTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 7);
		}

		/// <summary>Inits PlannedMatchView's mappings</summary>
		private void InitPlannedMatchTypedViewMappings()
		{
			this.AddElementMapping("PlannedMatchTypedView", @"TestOrg", @"dbo", "PlannedMatch", 27);
			this.AddElementFieldMapping("PlannedMatchTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("PlannedMatchTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("PlannedMatchTypedView", "TournamentName", "TournamentName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 7);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundLegSequenceNo", "RoundLegSequenceNo", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("PlannedMatchTypedView", "RoundLegDescription", "RoundLegDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("PlannedMatchTypedView", "HomeTeamId", "HomeTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 10);
			this.AddElementFieldMapping("PlannedMatchTypedView", "HomeTeamNameForRound", "HomeTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("PlannedMatchTypedView", "GuestTeamId", "GuestTeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 12);
			this.AddElementFieldMapping("PlannedMatchTypedView", "GuestTeamNameForRound", "GuestTeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 13);
			this.AddElementFieldMapping("PlannedMatchTypedView", "PlannedStart", "PlannedStart", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 14);
			this.AddElementFieldMapping("PlannedMatchTypedView", "PlannedEnd", "PlannedEnd", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 15);
			this.AddElementFieldMapping("PlannedMatchTypedView", "OrigPlannedStart", "OrigPlannedStart", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 16);
			this.AddElementFieldMapping("PlannedMatchTypedView", "OrigPlannedEnd", "OrigPlannedEnd", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 17);
			this.AddElementFieldMapping("PlannedMatchTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 18);
			this.AddElementFieldMapping("PlannedMatchTypedView", "VenueName", "VenueName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 19);
			this.AddElementFieldMapping("PlannedMatchTypedView", "VenueExtension", "VenueExtension", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 20);
			this.AddElementFieldMapping("PlannedMatchTypedView", "OrigVenueId", "OrigVenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 21);
			this.AddElementFieldMapping("PlannedMatchTypedView", "OrigVenueName", "OrigVenueName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 22);
			this.AddElementFieldMapping("PlannedMatchTypedView", "OrigVenueExtension", "OrigVenueExtension", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 23);
			this.AddElementFieldMapping("PlannedMatchTypedView", "ChangeSerial", "ChangeSerial", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 24);
			this.AddElementFieldMapping("PlannedMatchTypedView", "Remarks", "Remarks", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 25);
			this.AddElementFieldMapping("PlannedMatchTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 26);
		}

		/// <summary>Inits RankingListView's mappings</summary>
		private void InitRankingListTypedViewMappings()
		{
			this.AddElementMapping("RankingListTypedView", @"TestOrg", @"dbo", "RankingList", 24);
			this.AddElementFieldMapping("RankingListTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RankingListTypedView", "TournamentName", "TournamentName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("RankingListTypedView", "TournamentDescription", "TournamentDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("RankingListTypedView", "TournamentIsComplete", "TournamentIsComplete", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("RankingListTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("RankingListTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("RankingListTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("RankingListTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 7);
			this.AddElementFieldMapping("RankingListTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 8);
			this.AddElementFieldMapping("RankingListTypedView", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 9);
			this.AddElementFieldMapping("RankingListTypedView", "TeamName", "TeamName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 10);
			this.AddElementFieldMapping("RankingListTypedView", "TeamNameForRound", "TeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("RankingListTypedView", "ClubName", "ClubName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 12);
			this.AddElementFieldMapping("RankingListTypedView", "ValuationDate", "ValuationDate", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 13);
			this.AddElementFieldMapping("RankingListTypedView", "Rank", "Rank", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 14);
			this.AddElementFieldMapping("RankingListTypedView", "MatchPointsWon", "MatchPointsWon", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 15);
			this.AddElementFieldMapping("RankingListTypedView", "MatchPointsLost", "MatchPointsLost", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 16);
			this.AddElementFieldMapping("RankingListTypedView", "SetPointsWon", "SetPointsWon", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 17);
			this.AddElementFieldMapping("RankingListTypedView", "SetPointsLost", "SetPointsLost", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 18);
			this.AddElementFieldMapping("RankingListTypedView", "BallPointsWon", "BallPointsWon", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 19);
			this.AddElementFieldMapping("RankingListTypedView", "BallPointsLost", "BallPointsLost", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 20);
			this.AddElementFieldMapping("RankingListTypedView", "MatchesPlayed", "MatchesPlayed", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 21);
			this.AddElementFieldMapping("RankingListTypedView", "MatchesToPlay", "MatchesToPlay", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 22);
			this.AddElementFieldMapping("RankingListTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 23);
		}

		/// <summary>Inits RoundLegPeriodView's mappings</summary>
		private void InitRoundLegPeriodTypedViewMappings()
		{
			this.AddElementMapping("RoundLegPeriodTypedView", @"TestOrg", @"dbo", "RoundLegPeriod", 6);
			this.AddElementFieldMapping("RoundLegPeriodTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RoundLegPeriodTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("RoundLegPeriodTypedView", "LegId", "LegId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 2);
			this.AddElementFieldMapping("RoundLegPeriodTypedView", "SequenceNo", "SequenceNo", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("RoundLegPeriodTypedView", "StartDateTime", "StartDateTime", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 4);
			this.AddElementFieldMapping("RoundLegPeriodTypedView", "EndDateTime", "EndDateTime", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 5);
		}

		/// <summary>Inits RoundTeamView's mappings</summary>
		private void InitRoundTeamTypedViewMappings()
		{
			this.AddElementMapping("RoundTeamTypedView", @"TestOrg", @"dbo", "RoundTeam", 13);
			this.AddElementFieldMapping("RoundTeamTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("RoundTeamTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("RoundTeamTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("RoundTeamTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 3);
			this.AddElementFieldMapping("RoundTeamTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 5);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamName", "TeamName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamNameForRound", "TeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 7);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamClubName", "TeamClubName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 8);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamMatchDayOfWeek", "TeamMatchDayOfWeek", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamMatchTime", "TeamMatchTime", false, "Time", 0, 0, 0, false, string.Empty, null, typeof(System.TimeSpan), 10);
			this.AddElementFieldMapping("RoundTeamTypedView", "TeamModifiedOn", "TeamModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 11);
			this.AddElementFieldMapping("RoundTeamTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 12);
		}

		/// <summary>Inits TeamUserRoundView's mappings</summary>
		private void InitTeamUserRoundTypedViewMappings()
		{
			this.AddElementMapping("TeamUserRoundTypedView", @"TestOrg", @"dbo", "TeamUserRound", 26);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "TeamName", "TeamName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "TeamNameForRound", "TeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "MatchDayOfWeek", "MatchDayOfWeek", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "MatchWeekday", "MatchWeekday", false, "NVarChar", 4000, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "MatchTime", "MatchTime", false, "Time", 0, 0, 0, false, string.Empty, null, typeof(System.TimeSpan), 5);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "ClubName", "ClubName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "TeamModifiedOn", "TeamModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 7);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "UserId", "UserId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 8);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "Gender", "Gender", false, "NVarChar", 1, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "Title", "Title", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 10);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "FirstName", "FirstName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "MiddleName", "MiddleName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 12);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "LastName", "LastName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 13);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "Nickname", "Nickname", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 14);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "PhoneNumber", "PhoneNumber", false, "NVarChar", 40, 0, 0, false, string.Empty, null, typeof(System.String), 15);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "PhoneNumber2", "PhoneNumber2", false, "NVarChar", 40, 0, 0, false, string.Empty, null, typeof(System.String), 16);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "Email", "Email", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 17);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "Email2", "Email2", false, "NVarChar", 100, 0, 0, false, string.Empty, null, typeof(System.String), 18);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "UserModifiedOn", "UserModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 19);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "IsManager", "IsManager", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 20);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "IsPlayer", "IsPlayer", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 21);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 22);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 23);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 24);
			this.AddElementFieldMapping("TeamUserRoundTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 25);
		}

		/// <summary>Inits TeamVenueRoundView's mappings</summary>
		private void InitTeamVenueRoundTypedViewMappings()
		{
			this.AddElementMapping("TeamVenueRoundTypedView", @"TestOrg", @"dbo", "TeamVenueRound", 25);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "TeamName", "TeamName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "TeamNameForRound", "TeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "TeamClubName", "TeamClubName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 3);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "MatchDayOfWeek", "MatchDayOfWeek", false, "Int", 0, 10, 0, false, string.Empty, null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "MatchWeekday", "MatchWeekday", false, "NVarChar", 4000, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "MatchTime", "MatchTime", false, "Time", 0, 0, 0, false, string.Empty, null, typeof(System.TimeSpan), 6);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "TeamModifiedOn", "TeamModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 7);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 8);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueName", "VenueName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueExtension", "VenueExtension", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 10);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueStreet", "VenueStreet", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenuePostalCode", "VenuePostalCode", false, "NVarChar", 10, 0, 0, false, string.Empty, null, typeof(System.String), 12);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueCity", "VenueCity", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 13);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueDirection", "VenueDirection", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 14);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueLongitude", "VenueLongitude", false, "Float", 0, 38, 0, false, string.Empty, null, typeof(System.Double), 15);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueLatitude", "VenueLatitude", false, "Float", 0, 38, 0, false, string.Empty, null, typeof(System.Double), 16);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenuePrecisePosition", "VenuePrecisePosition", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 17);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "VenueModifiedOn", "VenueModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 18);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 19);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "RoundName", "RoundName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 20);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "RoundDescription", "RoundDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 21);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "RoundTypeName", "RoundTypeName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 22);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "RoundTypeDescription", "RoundTypeDescription", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 23);
			this.AddElementFieldMapping("TeamVenueRoundTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 24);
		}

		/// <summary>Inits VenueDistanceResultView's mappings</summary>
		private void InitVenueDistanceResultTypedViewMappings()
		{
			this.AddElementMapping("VenueDistanceResultTypedView", @"TestOrg", @"dbo", "Resultset1", 13);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Id", "Id", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Name", "Name", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Extension", "Extension", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Street", "Street", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 3);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "PostalCode", "PostalCode", false, "NVarChar", 10, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "City", "City", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Longitude", "Longitude", false, "Float", 0, 15, 0, false, string.Empty, null, typeof(System.Double), 6);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Latitude", "Latitude", false, "Float", 0, 15, 0, false, string.Empty, null, typeof(System.Double), 7);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "PrecisePosition", "PrecisePosition", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 8);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Direction", "Direction", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 9);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "CreatedOn", "CreatedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 10);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "ModifiedOn", "ModifiedOn", false, "DateTime", 0, 0, 0, false, string.Empty, null, typeof(System.DateTime), 11);
			this.AddElementFieldMapping("VenueDistanceResultTypedView", "Distance", "Distance", false, "Float", 0, 15, 0, false, string.Empty, null, typeof(System.Double), 12);
		}

		/// <summary>Inits VenueTeamView's mappings</summary>
		private void InitVenueTeamTypedViewMappings()
		{
			this.AddElementMapping("VenueTeamTypedView", @"TestOrg", @"dbo", "VenueTeam", 16);
			this.AddElementFieldMapping("VenueTeamTypedView", "VenueId", "VenueId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 0);
			this.AddElementFieldMapping("VenueTeamTypedView", "VenueName", "VenueName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 1);
			this.AddElementFieldMapping("VenueTeamTypedView", "VenueExtension", "VenueExtension", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 2);
			this.AddElementFieldMapping("VenueTeamTypedView", "Street", "Street", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 3);
			this.AddElementFieldMapping("VenueTeamTypedView", "PostalCode", "PostalCode", false, "NVarChar", 10, 0, 0, false, string.Empty, null, typeof(System.String), 4);
			this.AddElementFieldMapping("VenueTeamTypedView", "City", "City", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 5);
			this.AddElementFieldMapping("VenueTeamTypedView", "Direction", "Direction", false, "NVarChar", 2147483647, 0, 0, false, string.Empty, null, typeof(System.String), 6);
			this.AddElementFieldMapping("VenueTeamTypedView", "Longitude", "Longitude", false, "Float", 0, 38, 0, false, string.Empty, null, typeof(System.Double), 7);
			this.AddElementFieldMapping("VenueTeamTypedView", "Latitude", "Latitude", false, "Float", 0, 38, 0, false, string.Empty, null, typeof(System.Double), 8);
			this.AddElementFieldMapping("VenueTeamTypedView", "PrecisePosition", "PrecisePosition", false, "Bit", 0, 0, 0, false, string.Empty, null, typeof(System.Boolean), 9);
			this.AddElementFieldMapping("VenueTeamTypedView", "TeamId", "TeamId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 10);
			this.AddElementFieldMapping("VenueTeamTypedView", "TeamName", "TeamName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 11);
			this.AddElementFieldMapping("VenueTeamTypedView", "TeamNameForRound", "TeamNameForRound", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 12);
			this.AddElementFieldMapping("VenueTeamTypedView", "TeamClubName", "TeamClubName", false, "NVarChar", 255, 0, 0, false, string.Empty, null, typeof(System.String), 13);
			this.AddElementFieldMapping("VenueTeamTypedView", "TournamentId", "TournamentId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 14);
			this.AddElementFieldMapping("VenueTeamTypedView", "RoundId", "RoundId", false, "BigInt", 0, 19, 0, false, string.Empty, null, typeof(System.Int64), 15);
		}
	}
}
